!!! including "./config.env.sh"

!!! Using HOLBA_HOLMAKE=/home/andreas/data/hol/HolBA_opt/hol_k14/bin/Holmake

make[1]: Entering directory '/home/andreas/data/hol/HolBA_symbform'
!!! including "./config.env.sh"

!!! Using HOLBA_HOLMAKE=/home/andreas/data/hol/HolBA_opt/hol_k14/bin/Holmake

source ./scripts/setup/env_derive.sh && cd src/tools/symbexec/examples && /home/andreas/data/hol/HolBA_opt/hol_k14/bin/Holmake 
[0;31m%%%%%% Exporting PATH %%%%%%[0m
Using PATH=/home/andreas/data/hol/HolBA_opt/hol_k14/bin:/home/andreas/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
[0;31m%%%%%% Exporting HOLBA_Z3_DIR's derived variables %%%%%%[0m
Using PYTHONPATH=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin/python
Using LD_LIBRARY_PATH=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin:
Using HOL4_Z3_EXECUTABLE=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin/z3
Using HOL4_Z3_WRAPPED_EXECUTABLE=/home/andreas/data/hol/HolBA_symbform/src/shared/z3_wrapper.py
Scanning [1m$(HOLDIR)/examples/machine-code/hoare-triple[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/common[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/lib[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/m0/model[0m
Scanning [1m$(HOLDIR)/examples/machine-code/decompiler[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/m0/step[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/arm8/model[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/arm8/step[0m
Scanning [1m../../../aux[0m
Scanning [1m../../../theory/bir[0m
Scanning [1m../../../theory/bir-support[0m
Scanning [1m../../../theory/models/l3[0m
Scanning [1m../../../theory/models/l3mod[0m
Scanning [1m../../../theory/models[0m
Scanning [1m../../../theory/abstract_hoare_logic[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/riscv/model[0m
Scanning [1m$(HOLDIR)/examples/l3-machine-code/riscv/step[0m
Scanning [1m../../../theory/tools/lifter[0m
Scanning [1m../../../theory/tools/wp[0m
Scanning [1m../../../theory/tools/comp[0m
Scanning [1m../../../theory/tools/backlifter[0m
Scanning [1m../../../theory/tools[0m
Scanning [1m../../../theory[0m
Scanning [1m../../../shared/HolSmt[0m
Scanning [1m../../../shared/sml-simplejson[0m
Scanning [1m../../../shared[0m
Scanning [1m../../lifter[0m
Scanning [1m../../cfg[0m
Scanning [1m..[0m
make[1]: Leaving directory '/home/andreas/data/hol/HolBA_symbform'
make[1]: Entering directory '/home/andreas/data/hol/HolBA_symbform'
!!! including "./config.env.sh"

!!! Using HOLBA_HOLMAKE=/home/andreas/data/hol/HolBA_opt/hol_k14/bin/Holmake

--- created .exe file for src/tools/symbexec/examples/motor-func-test.sml
make[1]: Leaving directory '/home/andreas/data/hol/HolBA_symbform'
[0;31m%%%%%% Exporting PATH %%%%%%[0m
Using PATH=/home/andreas/data/hol/HolBA_opt/hol_k14/bin:/home/andreas/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
[0;31m%%%%%% Exporting HOLBA_Z3_DIR's derived variables %%%%%%[0m
Using PYTHONPATH=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin/python
Using LD_LIBRARY_PATH=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin:
Using HOL4_Z3_EXECUTABLE=/home/andreas/data/hol/HolBA_opt/z3-4.8.4.d6df51951f4c/bin/z3
Using HOL4_Z3_WRAPPED_EXECUTABLE=/home/andreas/data/hol/HolBA_symbform/src/shared/z3_wrapper.py
==============================================================
== Testing: src/tools/symbexec/examples/motor-func-test.exe ==
==============================================================
Saved definition __ "bprog_def"
Saved definition __ "m0_mod_vars_def"
Saved theorem _____ "m0_mod_vars_thm"
Saved definition __ "birenvtyl_def"
Saved theorem _____ "birenvtyl_EVAL_thm"

>>>>>> executed step in 1.538s

>>>>>> STEP in 0.196s

>>>>>> tryassert in 0.075s

>>>>>> SUBST in 0.000s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 1|>)

>>>>>> executed step in 0.897s

>>>>>> STEP in 0.383s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.361s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.021s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 2|>)

>>>>>> executed step in 1.381s

>>>>>> STEP in 0.391s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.929s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 3|>)

>>>>>> executed step in 0.821s

>>>>>> STEP in 0.205s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.062s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 4|>)

>>>>>> executed step in 0.624s

>>>>>> STEP in 0.342s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.998s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.027s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 5|>)

>>>>>> executed step in 0.647s

>>>>>> STEP in 0.207s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.893s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 6|>)

>>>>>> executed step in 0.478s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.740s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 7|>)

>>>>>> executed step in 0.207s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.473s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.036s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 0|>)

>>>>>> executed step in 1.096s

>>>>>> STEP in 0.325s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.519s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 1|>)

>>>>>> executed step in 0.644s

>>>>>> STEP in 0.218s

>>>>>> SUBST in 0.059s

>>> executed a whole step in 0.960s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 2|>)

>>>>>> executed step in 0.643s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.899s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 3|>)

>>>>>> executed step in 0.368s

>>>>>> STEP in 0.253s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.661s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 0|>)

>>>>>> executed step in 0.921s

>>>>>> STEP in 0.313s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.327s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 1|>)

>>>>>> executed step in 0.672s

>>>>>> STEP in 0.212s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.924s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 2|>)

>>>>>> executed step in 0.694s

>>>>>> STEP in 0.216s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.947s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 3|>)

>>>>>> executed step in 0.339s

>>>>>> STEP in 0.275s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.662s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 0|>)

>>>>>> executed step in 0.930s

>>>>>> STEP in 0.320s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.341s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 1|>)

>>>>>> executed step in 0.954s

>>>>>> STEP in 0.313s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.358s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.064s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 2|>)

>>>>>> executed step in 1.007s

>>>>>> STEP in 0.338s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.438s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.068s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 3|>)

>>>>>> executed step in 0.707s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.961s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.072s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 4|>)

>>>>>> executed step in 0.713s

>>>>>> STEP in 0.212s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.970s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.081s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 5|>)

>>>>>> executed step in 0.200s

>>>>>> STEP in 0.471s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.711s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.112s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 0|>)

>>>>>> executed step in 0.712s

>>>>>> STEP in 0.320s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.124s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.092s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 30.0027 sec.                                     ==
===================================================================

>>>>>> executed step in 1.039s

>>>>>> STEP in 0.327s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.463s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.104s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 2|>)

>>>>>> executed step in 0.766s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.182s

>>> executed a whole step in 1.242s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.105s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 3|>)

>>>>>> executed step in 0.668s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.961s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.106s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 4|>)

>>>>>> executed step in 0.173s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.409s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.107s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 0|>)

>>>>>> executed step in 0.610s

>>>>>> STEP in 0.294s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.991s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.119s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 1|>)

>>>>>> executed step in 0.408s

>>>>>> STEP in 0.202s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.641s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.127s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 2|>)

>>>>>> executed step in 0.632s

>>>>>> STEP in 0.275s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.939s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.133s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 3|>)

>>>>>> executed step in 0.642s

>>>>>> STEP in 0.286s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.968s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.138s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 4|>)

>>>>>> executed step in 0.408s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.641s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.144s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 5|>)

>>>>>> executed step in 0.414s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.648s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.151s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 6|>)

>>>>>> executed step in 0.164s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.399s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.160s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 0|>)

>>>>>> executed step in 0.930s

>>>>>> STEP in 0.296s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.315s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.171s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 1|>)

>>>>>> executed step in 0.628s

>>>>>> STEP in 0.287s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.946s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.178s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 2|>)

>>>>>> executed step in 0.409s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.643s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.185s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 3|>)

>>>>>> executed step in 0.159s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.395s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.194s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 0|>)

>>>>>> executed step in 0.913s

>>>>>> STEP in 0.297s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.298s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.208s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 1|>)

>>>>>> executed step in 0.649s

>>>>>> STEP in 0.260s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.950s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.219s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 2|>)

>>>>>> executed step in 0.654s

>>>>>> STEP in 0.292s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.976s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.223s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 3|>)

>>>>>> executed step in 0.393s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.625s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.241s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 4|>)

>>>>>> executed step in 0.386s

>>>>>> STEP in 0.198s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.621s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.246s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 5|>)

>>>>>> executed step in 0.187s

>>>>>> STEP in 0.435s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.655s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.334s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 0|>)

>>>>>> executed step in 0.585s

>>>>>> STEP in 0.286s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.962s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.273s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 1|>)

>>>>>> executed step in 0.630s

>>>>>> STEP in 0.279s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.939s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.284s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 2|>)

>>>>>> executed step in 0.673s

>>>>>> STEP in 0.246s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.959s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.302s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 3|>)

>>>>>> executed step in 0.436s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.677s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.317s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 4|>)

>>>>>> executed step in 0.703s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.990s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.324s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 5|>)

>>>>>> executed step in 0.722s

>>>>>> STEP in 0.268s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.047s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.366s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 6|>)

>>>>>> executed step in 0.725s

>>>>>> STEP in 0.331s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.096s
finished to proof free symbols altogether
composed
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 60.0429 sec.                                     ==
===================================================================

>>> sequentially composed a step in 0.353s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 7|>)

>>>>>> executed step in 0.191s

>>>>>> STEP in 0.475s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.698s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.462s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 0|>)

>>>>>> executed step in 0.666s

>>>>>> STEP in 0.325s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.080s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.379s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 1|>)

>>>>>> executed step in 1.024s

>>>>>> STEP in 0.340s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.454s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.389s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 2|>)

>>>>>> executed step in 0.676s

>>>>>> STEP in 0.312s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.022s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.404s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 3|>)

>>>>>> executed step in 0.749s

>>>>>> STEP in 0.309s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.101s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.419s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 4|>)

>>>>>> executed step in 0.177s

>>>>>> STEP in 0.228s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.441s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.437s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 0|>)

>>>>>> executed step in 1.046s

>>>>>> STEP in 0.339s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.487s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.448s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 1|>)

>>>>>> executed step in 0.455s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.710s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.462s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 2|>)

>>>>>> executed step in 0.738s

>>>>>> STEP in 0.325s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.098s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.479s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 3|>)

>>>>>> executed step in 0.467s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.725s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.496s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 4|>)

>>>>>> executed step in 0.720s

>>>>>> STEP in 0.306s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.062s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.518s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 5|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.707s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.530s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 6|>)

>>>>>> executed step in 0.722s

>>>>>> STEP in 0.268s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.037s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.540s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 7|>)

>>>>>> executed step in 0.170s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.424s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.871s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 0|>)

>>>>>> executed step in 1.025s

>>>>>> STEP in 0.328s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.433s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.581s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 1|>)

>>>>>> executed step in 0.484s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.204s

>>> executed a whole step in 0.955s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.600s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 2|>)

>>>>>> executed step in 0.668s

>>>>>> STEP in 0.290s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.002s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.616s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 3|>)

>>>>>> executed step in 0.188s

>>>>>> STEP in 0.474s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.703s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.684s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 0|>)

>>>>>> executed step in 1.023s

>>>>>> STEP in 0.328s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.441s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.644s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 1|>)

>>>>>> executed step in 0.423s

>>>>>> STEP in 0.218s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.678s
finished to proof free symbols altogether
composed
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 90.0628 sec.                                     ==
===================================================================

>>> sequentially composed a step in 0.668s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 2|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.214s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.694s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.682s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 3|>)

>>>>>> executed step in 0.452s

>>>>>> STEP in 0.210s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.694s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.705s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 4|>)

>>>>>> executed step in 0.420s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.662s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.747s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 5|>)

>>>>>> executed step in 0.664s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.901s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.741s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 6|>)

>>>>>> executed step in 0.371s

>>>>>> STEP in 0.257s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.659s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.750s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 0|>)

>>>>>> executed step in 0.909s

>>>>>> STEP in 0.296s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.301s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.770s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 1|>)

>>>>>> executed step in 0.679s

>>>>>> STEP in 0.206s

>>>>>> SUBST in 0.119s

>>> executed a whole step in 1.036s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.796s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 2|>)

>>>>>> executed step in 1.025s

>>>>>> STEP in 0.305s

>>> executed a whole step in 1.356s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.836s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 0|>)

>>>>>> executed step in 0.961s

>>>>>> STEP in 0.312s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.115s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 1|>)

>>>>>> executed step in 0.957s

>>>>>> STEP in 0.302s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.339s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.028s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 2|>)

>>>>>> executed step in 0.669s

>>>>>> STEP in 0.273s

>>>>>> SUBST in 0.306s

>>> executed a whole step in 1.289s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 3|>)

>>>>>> executed step in 0.655s

>>>>>> STEP in 0.290s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.979s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 4|>)

>>>>>> executed step in 0.160s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.395s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 0|>)

>>>>>> executed step in 0.954s

>>>>>> STEP in 0.296s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.344s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 1|>)

>>>>>> executed step in 0.702s

>>>>>> STEP in 0.306s

>>>>>> SUBST in 0.351s

>>> executed a whole step in 1.389s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 2|>)

>>>>>> executed step in 0.419s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.655s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 3|>)

>>>>>> executed step in 0.184s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.418s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 0|>)

>>>>>> executed step in 0.612s

>>>>>> STEP in 0.302s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.003s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 1|>)

>>>>>> executed step in 0.409s

>>>>>> STEP in 0.203s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.643s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 2|>)

>>>>>> executed step in 0.415s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.657s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 3|>)

>>>>>> executed step in 0.434s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.675s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 4|>)

>>>>>> executed step in 0.704s

>>>>>> STEP in 0.264s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.011s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 5|>)

>>>>>> executed step in 0.434s

>>>>>> STEP in 0.216s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.684s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.052s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 6|>)

>>>>>> executed step in 0.176s

>>>>>> STEP in 0.218s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.426s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 0|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 120.083 sec.                                     ==
===================================================================

>>>>>> executed step in 0.998s

>>>>>> STEP in 0.316s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.403s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 1|>)

>>>>>> executed step in 0.717s

>>>>>> STEP in 0.319s

>>>>>> SUBST in 0.155s

>>> executed a whole step in 1.224s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.068s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 2|>)

>>>>>> executed step in 0.759s

>>>>>> STEP in 0.347s

>>> executed a whole step in 1.135s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.074s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.140s

>>>>>> STEP in 0.370s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.149s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 1.061s

>>>>>> STEP in 0.332s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.474s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.721s

>>>>>> STEP in 0.353s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.167s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.228s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.717s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.503s

>>>>>> STEP in 0.230s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.767s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.180s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.449s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 0.723s

>>>>>> STEP in 0.372s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.188s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 1.056s

>>>>>> STEP in 0.340s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.478s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.042s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.763s

>>>>>> STEP in 0.324s

>>>>>> SUBST in 0.215s

>>> executed a whole step in 1.349s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.451s

>>>>>> STEP in 0.229s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.725s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.194s

>>>>>> STEP in 0.515s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.744s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.042s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 0.752s

>>>>>> STEP in 0.338s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.201s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.045s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.464s

>>> executed a whole step in 1.206s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.049s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.051s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.182s

>>>>>> STEP in 0.236s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.452s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 1.042s

>>>>>> STEP in 0.349s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.488s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.739s

>>>>>> STEP in 0.288s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.073s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.073s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.475s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.741s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.070s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.756s

>>>>>> STEP in 0.340s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.131s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.070s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.230s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.715s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.073s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.436s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.711s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.079s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.435s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.707s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.088s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.173s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.441s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.089s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 1.054s

>>>>>> STEP in 0.347s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.494s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.095s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 150.103 sec.                                     ==
===================================================================

>>>>>> executed step in 1.028s

>>>>>> STEP in 0.340s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.452s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.109s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.128s

>>>>>> STEP in 0.364s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.586s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.107s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.442s

>>>>>> STEP in 0.236s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.114s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.502s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.776s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.127s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.191s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.477s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.130s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 1.083s

>>>>>> STEP in 0.351s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.529s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.135s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 1.079s

>>>>>> STEP in 0.353s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.515s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.148s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.496s

>>>>>> STEP in 0.256s

>>>>>> SUBST in 0.250s

>>> executed a whole step in 1.045s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.156s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.755s

>>>>>> STEP in 0.349s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.142s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.163s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.214s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.491s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.171s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.122s

>>>>>> STEP in 0.356s

>>>>>> tryassert in 0.074s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.591s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.191s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.743s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.194s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.449s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.722s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.196s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.758s

>>>>>> STEP in 0.339s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.132s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.205s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.466s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.747s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.214s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.187s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.466s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.231s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 1.121s

>>>>>> STEP in 0.356s

>>>>>> tryassert in 0.072s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.589s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.242s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.751s

>>>>>> STEP in 0.360s

>>>>>> SUBST in 0.055s

>>> executed a whole step in 1.202s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.245s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.472s

>>>>>> STEP in 0.246s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.757s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.257s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.189s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.467s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.276s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 1.075s

>>>>>> STEP in 0.415s

>>>>>> tryassert in 0.075s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.616s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.286s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.806s

>>>>>> STEP in 0.379s

>>>>>> SUBST in 0.106s

>>> executed a whole step in 1.328s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.301s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.484s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.766s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.305s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.220s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.500s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.316s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 0|>)

>>>>>> executed step in 0.774s

>>>>>> STEP in 0.377s

>>>>>> tryassert in 0.092s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 180.128 sec.                                     ==
===================================================================

>>>>>> SUBST in 0.110s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 1|>)

>>>>>> executed step in 0.473s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.354s

>>> executed a whole step in 1.101s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 2|>)

>>>>>> executed step in 0.766s

>>>>>> STEP in 0.334s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.137s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 3|>)

>>>>>> executed step in 0.190s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.459s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.052s

>>>>>> STEP in 0.395s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.553s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 0.700s

>>>>>> STEP in 0.336s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.119s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 1.045s

>>>>>> STEP in 0.476s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.613s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.044s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.433s

>>>>>> STEP in 0.221s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.691s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.480s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.760s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.196s

>>>>>> STEP in 0.547s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.786s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 0.847s

>>>>>> STEP in 0.351s

>>>>>> tryassert in 0.087s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.324s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.044s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 1.097s

>>>>>> STEP in 0.418s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.621s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.046s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.487s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.221s

>>> executed a whole step in 0.989s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.436s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.708s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.062s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.175s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.440s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.054s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 0.701s

>>>>>> STEP in 0.344s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.137s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.493s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.490s

>>> executed a whole step in 1.263s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.062s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.448s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.718s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.066s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.206s

>>>>>> STEP in 0.553s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.795s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 0.765s

>>>>>> STEP in 0.619s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.504s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.076s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.555s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.838s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.085s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.775s

>>>>>> STEP in 0.338s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.162s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.086s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.492s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.766s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.091s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.722s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.098s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.739s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.106s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.784s

>>>>>> STEP in 0.345s

>>>>>> SUBST in 0.009s

>>> executed a whole step in 1.191s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.109s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.198s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.474s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.119s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 1.055s

>>>>>> STEP in 0.462s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.625s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.127s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 210.252 sec.                                     ==
===================================================================

>>>>>> executed step in 0.756s

>>>>>> STEP in 0.360s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.199s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.147s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.182s

>>>>>> STEP in 0.423s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.719s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.139s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.446s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.722s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.149s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.915s

>>>>>> STEP in 0.361s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.319s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.151s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.196s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.482s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.170s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 1.084s

>>>>>> STEP in 0.483s

>>>>>> tryassert in 0.073s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.689s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.175s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.738s

>>>>>> STEP in 0.362s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.185s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.185s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.520s

>>>>>> STEP in 0.259s

>>>>>> SUBST in 0.269s

>>> executed a whole step in 1.085s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.190s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.464s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.751s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.201s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.177s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.461s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.210s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.150s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.611s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.227s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.771s

>>>>>> STEP in 0.374s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.183s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.229s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.473s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.757s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.238s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.749s

>>>>>> STEP in 0.361s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.167s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.292s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.468s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.757s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.291s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.176s

>>>>>> STEP in 0.246s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.464s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.273s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 1.093s

>>>>>> STEP in 0.499s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.687s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.287s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.466s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.050s

>>> executed a whole step in 0.790s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.297s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.458s

>>>>>> STEP in 0.245s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.742s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.303s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.212s

>>>>>> STEP in 0.544s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.800s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.438s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 0.750s

>>>>>> STEP in 0.355s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.207s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.335s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.797s

>>>>>> STEP in 0.378s

>>>>>> SUBST in 0.049s

>>> executed a whole step in 1.261s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.342s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.475s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.762s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.361s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.214s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 240.321 sec.                                     ==
===================================================================

>>>>>> STEP in 0.548s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.806s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.545s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 0|>)

>>>>>> executed step in 0.666s

>>>>>> STEP in 0.316s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 1|>)

>>>>>> executed step in 0.968s

>>>>>> STEP in 0.427s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.475s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.028s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 2|>)

>>>>>> executed step in 0.462s

>>>>>> STEP in 0.216s

>>>>>> SUBST in 0.288s

>>> executed a whole step in 0.998s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 3|>)

>>>>>> executed step in 0.400s

>>>>>> STEP in 0.205s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.640s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.028s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 4|>)

>>>>>> executed step in 0.176s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.411s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.030s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 0|>)

>>>>>> executed step in 0.638s

>>>>>> STEP in 0.297s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.022s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 1|>)

>>>>>> executed step in 0.427s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.663s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 2|>)

>>>>>> executed step in 0.723s

>>>>>> STEP in 0.281s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.052s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.070s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 3|>)

>>>>>> executed step in 0.398s

>>>>>> STEP in 0.195s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.625s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 4|>)

>>>>>> executed step in 0.406s

>>>>>> STEP in 0.197s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.636s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 5|>)

>>>>>> executed step in 0.664s

>>>>>> STEP in 0.301s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.014s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.081s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 6|>)

>>>>>> executed step in 0.459s

>>>>>> STEP in 0.207s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 7|>)

>>>>>> executed step in 0.185s

>>>>>> STEP in 0.484s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.707s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.088s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 0|>)

>>>>>> executed step in 0.766s

>>>>>> STEP in 0.303s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.157s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 1|>)

>>>>>> executed step in 0.610s

>>>>>> STEP in 0.306s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.997s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 2|>)

>>>>>> executed step in 0.661s

>>>>>> STEP in 0.327s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.078s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.056s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 3|>)

>>>>>> executed step in 0.404s

>>>>>> STEP in 0.191s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.634s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.063s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 4|>)

>>>>>> executed step in 0.456s

>>>>>> STEP in 0.210s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.697s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.062s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 5|>)

>>>>>> executed step in 0.203s

>>>>>> STEP in 0.462s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.704s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.119s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 0|>)

>>>>>> executed step in 0.736s

>>>>>> STEP in 0.311s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.137s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.073s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 1|>)

>>>>>> executed step in 1.054s

>>>>>> STEP in 0.311s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.456s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.075s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 2|>)

>>>>>> executed step in 0.464s

>>>>>> STEP in 0.227s

>>>>>> SUBST in 0.212s

>>> executed a whole step in 0.935s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.085s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 3|>)

>>>>>> executed step in 0.713s

>>>>>> STEP in 0.295s

>>>>>> SUBST in 0.005s

>>> executed a whole step in 1.061s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.177s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 4|>)

>>>>>> executed step in 0.162s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.406s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.095s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 0|>)

>>>>>> executed step in 0.993s

>>>>>> STEP in 0.441s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.522s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.097s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 1|>)

>>>>>> executed step in 0.451s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.465s

>>> executed a whole step in 1.172s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.104s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 2|>)

>>>>>> executed step in 0.432s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.677s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.113s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 3|>)

>>>>>> executed step in 0.170s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.413s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.121s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 0|>)

>>>>>> executed step in 0.979s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 270.363 sec.                                     ==
===================================================================

>>>>>> STEP in 0.435s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.502s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.129s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 1|>)

>>>>>> executed step in 0.419s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.652s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.138s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 2|>)

>>>>>> executed step in 0.764s

>>>>>> STEP in 0.297s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.101s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.177s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 3|>)

>>>>>> executed step in 0.467s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.720s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.146s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 4|>)

>>>>>> executed step in 0.429s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.683s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.160s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 5|>)

>>>>>> executed step in 0.437s

>>>>>> STEP in 0.221s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.694s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.165s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 6|>)

>>>>>> executed step in 0.165s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.422s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.175s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 0|>)

>>>>>> executed step in 1.080s

>>>>>> STEP in 0.319s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.505s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.185s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 1|>)

>>>>>> executed step in 0.800s

>>>>>> STEP in 0.352s

>>>>>> SUBST in 0.160s

>>> executed a whole step in 1.346s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.195s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 2|>)

>>>>>> executed step in 0.859s

>>>>>> STEP in 0.357s

>>> executed a whole step in 1.245s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.212s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.155s

>>>>>> STEP in 0.458s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.153s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 0.707s

>>>>>> STEP in 0.340s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.129s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.727s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.179s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.772s

>>>>>> STEP in 0.325s

>>>>>> SUBST in 0.006s

>>> executed a whole step in 1.156s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.068s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.494s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.761s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.172s

>>>>>> STEP in 0.238s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.445s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 1.062s

>>>>>> STEP in 0.457s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.625s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 0.732s

>>>>>> STEP in 0.354s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.169s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.849s

>>>>>> STEP in 0.383s

>>>>>> SUBST in 0.234s

>>> executed a whole step in 1.501s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.729s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.172s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.451s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 1.043s

>>>>>> STEP in 0.482s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.618s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.046s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.477s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.588s

>>> executed a whole step in 1.349s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.435s

>>>>>> STEP in 0.227s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.700s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.177s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.447s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 0.696s

>>>>>> STEP in 0.344s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.133s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.452s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.729s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 300.399 sec.                                     ==
===================================================================

>>>>>> executed step in 0.753s

>>>>>> STEP in 0.324s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.124s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.067s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.469s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.745s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.763s

>>>>>> STEP in 0.310s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.119s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.080s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.462s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.078s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.449s

>>>>>> STEP in 0.238s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.730s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.085s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.452s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.088s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 1.126s

>>>>>> STEP in 0.364s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.589s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.098s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)

>>>>>> executed step in 1.142s

>>>>>> STEP in 0.363s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.591s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.109s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.158s

>>>>>> STEP in 0.462s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.729s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.115s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.493s

>>>>>> STEP in 0.256s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.790s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.129s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.559s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.846s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.122s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.194s

>>>>>> STEP in 0.262s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.500s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.134s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 0.789s

>>>>>> STEP in 0.372s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.258s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.139s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.768s

>>>>>> STEP in 0.364s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.223s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.154s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.880s

>>>>>> STEP in 0.365s

>>>>>> SUBST in 0.290s

>>> executed a whole step in 1.573s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.175s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.488s

>>>>>> STEP in 0.256s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.786s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.168s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.259s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.483s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.180s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.162s

>>>>>> STEP in 0.389s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.652s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.197s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.813s

>>>>>> STEP in 0.325s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.189s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.201s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.495s

>>>>>> STEP in 0.261s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.796s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.205s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.795s

>>>>>> STEP in 0.364s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.197s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.212s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.506s

>>>>>> STEP in 0.253s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.800s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.226s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.251s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.468s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.230s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 0.738s

>>>>>> STEP in 0.377s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.210s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.248s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.488s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.057s

>>> executed a whole step in 0.830s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.253s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.483s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.776s
finished to proof free symbols altogether
composed
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 330.439 sec.                                     ==
===================================================================

>>> sequentially composed a step in 0.266s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.185s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.473s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.274s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 1.162s

>>>>>> STEP in 0.386s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.649s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.298s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.822s

>>>>>> STEP in 0.319s

>>>>>> SUBST in 0.064s

>>> executed a whole step in 1.258s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.312s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.482s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.769s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.307s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.226s

>>>>>> STEP in 0.559s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.827s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.433s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 0|>)

>>>>>> executed step in 0.808s

>>>>>> STEP in 0.388s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.074s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 1|>)

>>>>>> executed step in 0.766s

>>>>>> STEP in 0.364s

>>>>>> SUBST in 0.479s

>>> executed a whole step in 1.645s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 2|>)

>>>>>> executed step in 0.478s

>>>>>> STEP in 0.236s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.754s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.036s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 3|>)

>>>>>> executed step in 0.215s

>>>>>> STEP in 0.534s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.792s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 0.796s

>>>>>> STEP in 0.345s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.233s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 0.686s

>>>>>> STEP in 0.360s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.128s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 1.175s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.626s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.441s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.714s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.838s

>>>>>> STEP in 0.361s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.234s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.204s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.479s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 1.062s

>>>>>> STEP in 0.482s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.636s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.044s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 0.706s

>>>>>> STEP in 0.357s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.147s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.860s

>>>>>> STEP in 0.370s

>>>>>> SUBST in 0.243s

>>> executed a whole step in 1.515s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.049s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.457s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.735s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.051s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.170s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.452s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 1.083s

>>>>>> STEP in 0.482s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.657s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.060s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.477s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.588s

>>> executed a whole step in 1.351s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.063s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.450s

>>>>>> STEP in 0.245s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.066s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.189s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.466s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.074s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 0.687s

>>>>>> STEP in 0.354s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 360.459 sec.                                     ==
===================================================================

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.139s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.077s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.471s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.746s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.083s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.750s

>>>>>> STEP in 0.338s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.134s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.085s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.473s

>>>>>> STEP in 0.238s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.748s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.101s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.764s

>>>>>> STEP in 0.344s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.155s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.101s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.451s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.730s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.104s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.461s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.739s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.112s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.189s

>>>>>> STEP in 0.245s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.472s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.123s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 1.188s

>>>>>> STEP in 0.386s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.668s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.148s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)

>>>>>> executed step in 1.124s

>>>>>> STEP in 0.479s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.687s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.139s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 0.774s

>>>>>> STEP in 0.394s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.263s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.143s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.456s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.739s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.150s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.541s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.826s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.156s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.203s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.495s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.166s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 0.766s

>>>>>> STEP in 0.366s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.228s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.170s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.780s

>>>>>> STEP in 0.367s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.232s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.183s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.526s

>>>>>> STEP in 0.275s

>>>>>> SUBST in 0.287s

>>> executed a whole step in 1.132s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.198s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.471s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.770s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.207s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.181s

>>>>>> STEP in 0.251s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.469s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.213s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.124s

>>>>>> STEP in 0.379s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.598s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.222s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.740s

>>>>>> STEP in 0.314s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.112s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.230s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.778s

>>>>>> STEP in 0.344s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.166s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.247s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.758s

>>>>>> STEP in 0.358s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.154s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.249s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.487s

>>>>>> STEP in 0.256s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.784s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.260s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.188s

>>>>>> STEP in 0.253s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.478s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.278s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 0.774s

>>>>>> STEP in 0.380s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.250s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.284s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 390.478 sec.                                     ==
===================================================================

>>>>>> executed step in 0.482s

>>>>>> STEP in 0.257s

>>>>>> SUBST in 0.056s

>>> executed a whole step in 0.834s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.302s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.493s

>>>>>> STEP in 0.255s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.789s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.320s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.198s

>>>>>> STEP in 0.258s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.493s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.323s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 1.120s

>>>>>> STEP in 0.384s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.600s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.343s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.812s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.060s

>>> executed a whole step in 1.166s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.350s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.785s

>>>>>> STEP in 0.313s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.153s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.359s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.225s

>>>>>> STEP in 0.516s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.779s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.467s

no executable states left, terminating here
done building the tree
now reducing it to one sound structure

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 1|>)

>>>>>> executed step in 0.594s

>>>>>> STEP in 0.273s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.946s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.020s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 2|>)

>>>>>> executed step in 0.974s

>>>>>> STEP in 0.288s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.352s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.021s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 3|>)

>>>>>> executed step in 0.669s

>>>>>> STEP in 0.272s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.970s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.021s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 4|>)

>>>>>> executed step in 0.388s

>>>>>> STEP in 0.188s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.605s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.023s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 5|>)

>>>>>> executed step in 0.677s

>>>>>> STEP in 0.283s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.988s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.022s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 6|>)

>>>>>> executed step in 0.400s

>>>>>> STEP in 0.191s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.624s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.024s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 7|>)

>>>>>> executed step in 0.183s

>>>>>> STEP in 0.458s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.676s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 0|>)

>>>>>> executed step in 0.667s

>>>>>> STEP in 0.285s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.030s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.027s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 1|>)

>>>>>> executed step in 0.393s

>>>>>> STEP in 0.196s

>>>>>> SUBST in 0.047s

>>> executed a whole step in 0.671s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 2|>)

>>>>>> executed step in 0.696s

>>>>>> STEP in 0.302s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.030s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2826w); bpc_index := 3|>)

>>>>>> executed step in 0.189s

>>>>>> STEP in 0.195s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.414s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 0|>)

>>>>>> executed step in 0.598s

>>>>>> STEP in 0.288s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.964s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 1|>)

>>>>>> executed step in 0.733s

>>>>>> STEP in 0.295s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.067s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 2|>)

>>>>>> executed step in 0.432s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.678s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.046s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2828w); bpc_index := 3|>)

>>>>>> executed step in 0.192s

>>>>>> STEP in 0.198s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.422s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 0|>)

>>>>>> executed step in 0.612s

>>>>>> STEP in 0.293s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.993s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.052s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 1|>)

>>>>>> executed step in 0.631s

>>>>>> STEP in 0.302s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.012s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 2|>)

>>>>>> executed step in 0.693s

>>>>>> STEP in 0.324s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.106s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 3|>)

>>>>>> executed step in 0.433s

>>>>>> STEP in 0.212s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.686s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 4|>)

>>>>>> executed step in 0.456s

>>>>>> STEP in 0.219s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.707s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.074s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2830w); bpc_index := 5|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.223s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.436s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.083s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 0|>)

>>>>>> executed step in 0.723s

>>>>>> STEP in 0.317s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.131s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.093s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 420.497 sec.                                     ==
===================================================================

>>>>>> executed step in 1.050s

>>>>>> STEP in 0.325s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.454s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.098s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 2|>)

>>>>>> executed step in 0.454s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.170s

>>> executed a whole step in 0.882s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.097s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 3|>)

>>>>>> executed step in 0.688s

>>>>>> STEP in 0.294s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.020s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.115s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2832w); bpc_index := 4|>)

>>>>>> executed step in 0.186s

>>>>>> STEP in 0.219s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.437s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.117s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 0|>)

>>>>>> executed step in 1.057s

>>>>>> STEP in 0.321s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.469s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.121s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 1|>)

>>>>>> executed step in 0.733s

>>>>>> STEP in 0.318s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.087s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.130s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 2|>)

>>>>>> executed step in 0.440s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.693s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.141s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 3|>)

>>>>>> executed step in 0.710s

>>>>>> STEP in 0.314s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.077s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.151s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 4|>)

>>>>>> executed step in 0.447s

>>>>>> STEP in 0.207s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.693s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.150s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 5|>)

>>>>>> executed step in 0.431s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.686s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.164s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2834w); bpc_index := 6|>)

>>>>>> executed step in 0.172s

>>>>>> STEP in 0.211s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.419s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.167s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 0|>)

>>>>>> executed step in 0.647s

>>>>>> STEP in 0.310s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.047s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.172s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 1|>)

>>>>>> executed step in 0.678s

>>>>>> STEP in 0.285s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.996s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.186s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 2|>)

>>>>>> executed step in 0.749s

>>>>>> STEP in 0.307s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.101s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.202s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2836w); bpc_index := 3|>)

>>>>>> executed step in 0.190s

>>>>>> STEP in 0.219s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.443s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.201s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 0|>)

>>>>>> executed step in 1.065s

>>>>>> STEP in 0.322s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.480s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.220s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 1|>)

>>>>>> executed step in 0.421s

>>>>>> STEP in 0.225s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.684s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.218s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 2|>)

>>>>>> executed step in 0.416s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.660s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.230s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 3|>)

>>>>>> executed step in 0.694s

>>>>>> STEP in 0.274s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.007s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.241s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 4|>)

>>>>>> executed step in 0.695s

>>>>>> STEP in 0.305s

>>>>>> SUBST in 0.004s

>>> executed a whole step in 1.035s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.275s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2838w); bpc_index := 5|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.219s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.431s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.313s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 0|>)

>>>>>> executed step in 1.083s

>>>>>> STEP in 0.315s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.493s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.288s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 1|>)

>>>>>> executed step in 0.439s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.688s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.310s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 2|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.728s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.321s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 3|>)

>>>>>> executed step in 0.491s

>>>>>> STEP in 0.228s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.758s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.336s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 4|>)

>>>>>> executed step in 0.472s

>>>>>> STEP in 0.227s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.337s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 5|>)

>>>>>> executed step in 0.746s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.044s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.363s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 6|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 450.52 sec.                                      ==
===================================================================

>>>>>> executed step in 0.796s

>>>>>> STEP in 0.228s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.060s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.368s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2840w); bpc_index := 7|>)

>>>>>> executed step in 0.193s

>>>>>> STEP in 0.503s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.737s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.417s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 0|>)

>>>>>> executed step in 1.022s

>>>>>> STEP in 0.327s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.441s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.397s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 1|>)

>>>>>> executed step in 1.105s

>>>>>> STEP in 0.337s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.533s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.391s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 2|>)

>>>>>> executed step in 0.713s

>>>>>> STEP in 0.313s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.062s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.403s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 3|>)

>>>>>> executed step in 0.476s

>>>>>> STEP in 0.225s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.734s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.415s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2842w); bpc_index := 4|>)

>>>>>> executed step in 0.169s

>>>>>> STEP in 0.218s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.425s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.430s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 0|>)

>>>>>> executed step in 0.692s

>>>>>> STEP in 0.330s

>>>>>> tryassert in 0.042s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.101s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.443s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 1|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.707s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.462s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 2|>)

>>>>>> executed step in 0.460s

>>>>>> STEP in 0.221s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.714s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.478s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 3|>)

>>>>>> executed step in 0.475s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.732s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.489s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 4|>)

>>>>>> executed step in 0.740s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.997s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.514s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 5|>)

>>>>>> executed step in 0.721s

>>>>>> STEP in 0.225s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.981s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.522s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 6|>)

>>>>>> executed step in 0.752s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.044s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.681s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2844w); bpc_index := 7|>)

>>>>>> executed step in 0.229s

>>>>>> STEP in 0.562s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.838s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.634s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 0|>)

>>>>>> executed step in 1.000s

>>>>>> STEP in 0.328s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.408s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.573s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 1|>)

>>>>>> executed step in 0.748s

>>>>>> STEP in 0.299s

>>>>>> SUBST in 0.193s

>>> executed a whole step in 1.285s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.590s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 2|>)

>>>>>> executed step in 0.436s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.695s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.611s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2846w); bpc_index := 3|>)

>>>>>> executed step in 0.187s

>>>>>> STEP in 0.490s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.657s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 0|>)

>>>>>> executed step in 1.013s

>>>>>> STEP in 0.326s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.430s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.642s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 480.546 sec.                                     ==
===================================================================

>>>>>> executed step in 0.444s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.694s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.659s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 2|>)

>>>>>> executed step in 0.431s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.681s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.681s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 3|>)

>>>>>> executed step in 0.712s

>>>>>> STEP in 0.214s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.957s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.705s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 4|>)

>>>>>> executed step in 0.692s

>>>>>> STEP in 0.208s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.932s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.723s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 5|>)

>>>>>> executed step in 0.713s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.952s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.745s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2848w); bpc_index := 6|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.332s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.693s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.771s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 0|>)

>>>>>> executed step in 0.930s

>>>>>> STEP in 0.299s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.318s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.777s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 1|>)

>>>>>> executed step in 0.699s

>>>>>> STEP in 0.264s

>>>>>> SUBST in 0.121s

>>> executed a whole step in 1.125s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.803s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2850w); bpc_index := 2|>)

>>>>>> executed step in 0.979s

>>>>>> STEP in 0.307s

>>> executed a whole step in 1.312s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.826s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 0|>)

>>>>>> executed step in 0.997s

>>>>>> STEP in 0.315s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.110s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 1|>)

>>>>>> executed step in 0.975s

>>>>>> STEP in 0.296s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.358s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.028s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 2|>)

>>>>>> executed step in 0.709s

>>>>>> STEP in 0.314s

>>>>>> SUBST in 0.293s

>>> executed a whole step in 1.348s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 3|>)

>>>>>> executed step in 0.436s

>>>>>> STEP in 0.206s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.675s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.028s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 4|>)

>>>>>> executed step in 0.162s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.397s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 0|>)

>>>>>> executed step in 0.978s

>>>>>> STEP in 0.303s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.371s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 1|>)

>>>>>> executed step in 0.445s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.354s

>>> executed a whole step in 1.044s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 2|>)

>>>>>> executed step in 0.666s

>>>>>> STEP in 0.299s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 1.003s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 3|>)

>>>>>> executed step in 0.183s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.418s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 0|>)

>>>>>> executed step in 0.959s

>>>>>> STEP in 0.333s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.391s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 1|>)

>>>>>> executed step in 0.418s

>>>>>> STEP in 0.208s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.657s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 2|>)

>>>>>> executed step in 0.725s

>>>>>> STEP in 0.315s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.073s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 3|>)

>>>>>> executed step in 0.446s

>>>>>> STEP in 0.213s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.691s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.046s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 4|>)

>>>>>> executed step in 0.429s

>>>>>> STEP in 0.216s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.677s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 5|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 510.567 sec.                                     ==
===================================================================

>>>>>> executed step in 0.432s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.683s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.052s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 6|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.429s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 0|>)

>>>>>> executed step in 1.074s

>>>>>> STEP in 0.314s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.477s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.059s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 1|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.223s

>>>>>> SUBST in 0.158s

>>> executed a whole step in 0.881s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.064s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 2|>)

>>>>>> executed step in 1.468s

>>>>>> STEP in 0.379s

>>> executed a whole step in 1.881s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.075s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.164s

>>>>>> STEP in 0.414s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.150s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 0.717s

>>>>>> STEP in 0.341s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.143s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.720s

>>>>>> STEP in 0.352s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.164s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.720s

>>>>>> STEP in 0.327s

>>>>>> SUBST in 0.006s

>>> executed a whole step in 1.106s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.482s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.750s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.175s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.444s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 1.115s

>>>>>> STEP in 0.414s

>>>>>> tryassert in 0.074s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.653s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 0.720s

>>>>>> STEP in 0.342s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.145s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.477s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.214s

>>> executed a whole step in 0.968s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.458s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.730s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.173s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.442s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.051s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 1.044s

>>>>>> STEP in 0.455s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.607s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.512s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.462s

>>> executed a whole step in 1.256s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.050s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.790s

>>>>>> STEP in 0.334s

>>>>>> SUBST in 0.006s

>>> executed a whole step in 1.172s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.060s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.173s

>>>>>> STEP in 0.230s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.437s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 0.674s

>>>>>> STEP in 0.341s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.109s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.058s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.446s

>>>>>> STEP in 0.230s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.711s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.062s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.450s

>>>>>> STEP in 0.217s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.706s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.064s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.460s

>>>>>> STEP in 0.236s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.730s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.069s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.452s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.719s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.077s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.432s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.701s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.079s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.455s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.088s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.172s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.444s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.089s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 0.707s

>>>>>> STEP in 0.354s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 540.587 sec.                                     ==
===================================================================

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.156s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.096s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)

>>>>>> executed step in 1.083s

>>>>>> STEP in 0.345s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.517s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.106s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.104s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.556s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.117s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.460s

>>>>>> STEP in 0.236s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.120s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.826s

>>>>>> STEP in 0.328s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.201s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.125s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.202s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.479s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.133s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 1.127s

>>>>>> STEP in 0.354s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.573s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.140s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.719s

>>>>>> STEP in 0.351s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.154s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.147s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.834s

>>>>>> STEP in 0.375s

>>>>>> SUBST in 0.247s

>>> executed a whole step in 1.496s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.150s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.458s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.739s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.158s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.454s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.170s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.030s

>>>>>> STEP in 0.467s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.593s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.179s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.458s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.736s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.186s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.456s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.199s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.786s

>>>>>> STEP in 0.353s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.175s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.207s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.489s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.774s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.220s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.174s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.450s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.229s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 1.169s

>>>>>> STEP in 0.355s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.621s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.239s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.057s

>>> executed a whole step in 0.799s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.249s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.798s

>>>>>> STEP in 0.368s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.205s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.256s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.177s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.454s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.269s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 0.696s

>>>>>> STEP in 0.355s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.143s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.281s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.462s

>>>>>> STEP in 0.243s

>>>>>> SUBST in 0.060s

>>> executed a whole step in 0.803s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.292s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.777s

>>>>>> STEP in 0.341s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.156s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.309s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.200s

>>>>>> STEP in 0.533s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.769s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.437s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 0|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 570.627 sec.                                     ==
===================================================================

>>>>>> executed step in 0.781s

>>>>>> STEP in 0.369s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 1|>)

>>>>>> executed step in 0.450s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.351s

>>> executed a whole step in 1.076s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 2|>)

>>>>>> executed step in 0.431s

>>>>>> STEP in 0.231s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.700s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 3|>)

>>>>>> executed step in 0.184s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.451s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.089s

>>>>>> STEP in 0.331s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.522s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 1.065s

>>>>>> STEP in 0.352s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.512s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.716s

>>>>>> STEP in 0.352s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.160s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.451s

>>>>>> STEP in 0.225s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.713s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.040s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.494s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.762s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.170s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.439s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 0.716s

>>>>>> STEP in 0.349s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.157s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 1.063s

>>>>>> STEP in 0.339s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.502s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.053s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.791s

>>>>>> STEP in 0.330s

>>>>>> SUBST in 0.224s

>>> executed a whole step in 1.392s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.049s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.460s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.732s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.056s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.205s

>>>>>> STEP in 0.537s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.786s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 0.827s

>>>>>> STEP in 0.345s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.268s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.060s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.818s

>>>>>> STEP in 0.373s

>>>>>> SUBST in 0.465s

>>> executed a whole step in 1.691s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.073s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.456s

>>>>>> STEP in 0.231s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.725s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.185s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.458s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.075s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 1.035s

>>>>>> STEP in 0.456s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.593s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.085s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.449s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.082s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.464s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.731s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.088s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.721s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.090s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.450s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.723s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.104s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.784s

>>>>>> STEP in 0.344s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.163s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.102s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.452s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.733s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.108s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.171s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.449s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.118s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 0.715s

>>>>>> STEP in 0.351s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.159s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.130s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 600.649 sec.                                     ==
===================================================================

>>>>>> executed step in 1.113s

>>>>>> STEP in 0.357s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.553s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.134s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.184s

>>>>>> STEP in 0.366s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.644s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.142s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.801s

>>>>>> STEP in 0.349s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.195s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.145s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.525s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.801s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.162s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.203s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.491s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.163s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 1.144s

>>>>>> STEP in 0.409s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.662s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.167s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.726s

>>>>>> STEP in 0.364s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.178s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.185s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.513s

>>>>>> STEP in 0.262s

>>>>>> SUBST in 0.266s

>>> executed a whole step in 1.078s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.190s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.467s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.757s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.254s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.185s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.469s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.217s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 0.729s

>>>>>> STEP in 0.368s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.192s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.222s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.795s

>>>>>> STEP in 0.324s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.163s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.232s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.813s

>>>>>> STEP in 0.280s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.143s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.243s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.795s

>>>>>> STEP in 0.365s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.196s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.247s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.503s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.791s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.263s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.462s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.267s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 0.753s

>>>>>> STEP in 0.365s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.214s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.284s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.472s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.057s

>>> executed a whole step in 0.816s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.299s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.471s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.758s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.311s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.201s

>>>>>> STEP in 0.251s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.489s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.325s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 0.756s

>>>>>> STEP in 0.373s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.224s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.333s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.761s

>>>>>> STEP in 0.306s

>>>>>> SUBST in 0.060s

>>> executed a whole step in 1.176s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.349s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.783s

>>>>>> STEP in 0.293s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.133s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.359s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.214s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 630.67 sec.                                      ==
===================================================================

>>>>>> STEP in 0.519s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.771s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.474s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 0|>)

>>>>>> executed step in 0.667s

>>>>>> STEP in 0.314s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.057s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 1|>)

>>>>>> executed step in 0.648s

>>>>>> STEP in 0.295s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.021s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.029s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 2|>)

>>>>>> executed step in 0.722s

>>>>>> STEP in 0.320s

>>>>>> SUBST in 0.288s

>>> executed a whole step in 1.362s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.036s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 3|>)

>>>>>> executed step in 0.409s

>>>>>> STEP in 0.220s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.664s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.030s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2852w); bpc_index := 4|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.205s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.415s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.030s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 0|>)

>>>>>> executed step in 0.947s

>>>>>> STEP in 0.365s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.411s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.030s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 1|>)

>>>>>> executed step in 0.429s

>>>>>> STEP in 0.208s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.668s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.031s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 2|>)

>>>>>> executed step in 0.407s

>>>>>> STEP in 0.205s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.642s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 3|>)

>>>>>> executed step in 0.726s

>>>>>> STEP in 0.311s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.069s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 4|>)

>>>>>> executed step in 0.433s

>>>>>> STEP in 0.210s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.674s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 5|>)

>>>>>> executed step in 0.410s

>>>>>> STEP in 0.208s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.653s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 6|>)

>>>>>> executed step in 0.729s

>>>>>> STEP in 0.322s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.086s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2854w); bpc_index := 7|>)

>>>>>> executed step in 0.202s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.443s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.043s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 0|>)

>>>>>> executed step in 1.010s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.467s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.047s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 1|>)

>>>>>> executed step in 0.613s

>>>>>> STEP in 0.300s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.991s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.051s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 2|>)

>>>>>> executed step in 0.673s

>>>>>> STEP in 0.316s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.077s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.057s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 3|>)

>>>>>> executed step in 0.411s

>>>>>> STEP in 0.193s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.638s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.060s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 4|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.703s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.060s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2856w); bpc_index := 5|>)

>>>>>> executed step in 0.168s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.409s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.067s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 0|>)

>>>>>> executed step in 0.991s

>>>>>> STEP in 0.354s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.445s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 1|>)

>>>>>> executed step in 1.001s

>>>>>> STEP in 0.345s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.435s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.075s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 2|>)

>>>>>> executed step in 0.462s

>>>>>> STEP in 0.224s

>>>>>> SUBST in 0.216s

>>> executed a whole step in 0.933s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.082s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 3|>)

>>>>>> executed step in 0.424s

>>>>>> STEP in 0.210s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.669s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.091s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2858w); bpc_index := 4|>)

>>>>>> executed step in 0.194s

>>>>>> STEP in 0.491s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.723s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.125s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 0|>)

>>>>>> executed step in 0.768s

>>>>>> STEP in 0.311s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.168s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.097s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 1|>)

>>>>>> executed step in 0.446s

>>>>>> STEP in 0.222s

>>>>>> SUBST in 0.461s

>>> executed a whole step in 1.161s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.108s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 2|>)

>>>>>> executed step in 0.752s

>>>>>> STEP in 0.290s

>>>>>> SUBST in 0.005s

>>> executed a whole step in 1.087s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.137s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2860w); bpc_index := 3|>)

>>>>>> executed step in 0.195s

>>>>>> STEP in 0.209s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.436s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.115s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 0|>)

>>>>>> executed step in 0.637s

>>>>>> STEP in 0.307s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.034s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.127s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 1|>)
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 660.691 sec.                                     ==
===================================================================

>>>>>> executed step in 0.737s

>>>>>> STEP in 0.288s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 1.075s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.208s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 2|>)

>>>>>> executed step in 0.433s

>>>>>> STEP in 0.201s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.667s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.145s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 3|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.216s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.701s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.152s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 4|>)

>>>>>> executed step in 0.425s

>>>>>> STEP in 0.204s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.667s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.164s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 5|>)

>>>>>> executed step in 0.448s

>>>>>> STEP in 0.219s

>>>>>> SUBST in 0.002s

>>> executed a whole step in 0.703s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.168s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2862w); bpc_index := 6|>)

>>>>>> executed step in 0.169s

>>>>>> STEP in 0.221s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.423s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.171s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 0|>)

>>>>>> executed step in 0.666s

>>>>>> STEP in 0.328s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.086s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.182s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 1|>)

>>>>>> executed step in 0.471s

>>>>>> STEP in 0.228s

>>>>>> SUBST in 0.161s

>>> executed a whole step in 0.898s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.195s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2864w); bpc_index := 2|>)

>>>>>> executed step in 1.158s

>>>>>> STEP in 0.361s

>>> executed a whole step in 1.548s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.221s

continuing only with the executable states
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.174s

>>>>>> STEP in 0.386s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.153s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 1.067s

>>>>>> STEP in 0.381s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.540s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.728s

>>>>>> STEP in 0.363s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.182s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.451s

>>>>>> STEP in 0.232s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.724s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.850s

>>>>>> STEP in 0.358s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.243s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.200s

>>>>>> STEP in 0.238s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.473s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.034s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 1.052s

>>>>>> STEP in 0.533s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.685s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.037s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 0.794s

>>>>>> STEP in 0.362s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.246s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.514s

>>>>>> STEP in 0.254s

>>>>>> SUBST in 0.236s

>>> executed a whole step in 1.039s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.039s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.470s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.749s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.172s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.453s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.046s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 0.693s

>>>>>> STEP in 0.349s

>>>>>> tryassert in 0.053s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.134s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.056s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.505s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.584s

>>> executed a whole step in 1.376s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.054s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.448s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.721s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.051s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.179s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.454s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.054s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 1.091s

>>>>>> STEP in 0.350s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.535s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.757s

>>>>>> STEP in 0.347s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.142s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.062s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.452s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.722s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.464s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 690.712 sec.                                     ==
===================================================================

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.746s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.072s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.448s

>>>>>> STEP in 0.235s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.718s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.080s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.750s

>>>>>> STEP in 0.333s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.119s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.079s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.453s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.731s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.093s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.200s

>>>>>> STEP in 0.531s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.767s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.139s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 0.736s

>>>>>> STEP in 0.346s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.192s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.098s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)

>>>>>> executed step in 0.690s

>>>>>> STEP in 0.358s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.131s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.101s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.128s

>>>>>> STEP in 0.408s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.642s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.109s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.449s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.730s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.114s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.528s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.810s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.126s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.219s

>>>>>> STEP in 0.557s

>>>>>> SUBST in 0.001s

>>> executed a whole step in 0.819s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.146s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 0.780s

>>>>>> STEP in 0.368s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.259s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.135s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 1.100s

>>>>>> STEP in 0.444s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.642s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.143s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.518s

>>>>>> STEP in 0.264s

>>>>>> SUBST in 0.275s

>>> executed a whole step in 1.094s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.157s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.818s

>>>>>> STEP in 0.377s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.235s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.159s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.187s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.472s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.172s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 1.148s

>>>>>> STEP in 0.431s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.689s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.176s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.458s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.747s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.198s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.480s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.764s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.197s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.482s

>>>>>> STEP in 0.249s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.768s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.209s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.488s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.778s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.220s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.193s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.478s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.225s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 0.749s

>>>>>> STEP in 0.368s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.213s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.235s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.479s

>>>>>> STEP in 0.255s

>>>>>> SUBST in 0.055s

>>> executed a whole step in 0.826s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.249s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.482s

>>>>>> STEP in 0.251s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.772s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.259s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.175s

>>>>>> STEP in 0.253s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.470s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.271s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 0.762s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 720.733 sec.                                     ==
===================================================================

>>>>>> STEP in 0.364s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.222s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.282s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.769s

>>>>>> STEP in 0.326s

>>>>>> SUBST in 0.060s

>>> executed a whole step in 1.192s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.295s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.785s

>>>>>> STEP in 0.278s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.116s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.304s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.184s

>>>>>> STEP in 0.250s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.471s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.316s

no executable states left, terminating here
starting a branch
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 0|>)

>>>>>> executed step in 1.159s

>>>>>> STEP in 0.387s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.074s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 1|>)

>>>>>> executed step in 0.477s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.467s

>>> executed a whole step in 1.227s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.032s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 2|>)

>>>>>> executed step in 0.440s

>>>>>> STEP in 0.233s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.716s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2866w); bpc_index := 3|>)

>>>>>> executed step in 0.175s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.446s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.033s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>)

>>>>>> executed step in 1.077s

>>>>>> STEP in 0.347s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.518s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.036s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>)

>>>>>> executed step in 1.105s

>>>>>> STEP in 0.346s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.534s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.035s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>)

>>>>>> executed step in 0.751s

>>>>>> STEP in 0.365s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.208s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.036s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>)

>>>>>> executed step in 0.466s

>>>>>> STEP in 0.234s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.738s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.038s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>)

>>>>>> executed step in 0.522s

>>>>>> STEP in 0.237s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.795s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.044s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>)

>>>>>> executed step in 0.177s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.453s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.041s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>)

>>>>>> executed step in 1.085s

>>>>>> STEP in 0.357s

>>>>>> tryassert in 0.056s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.538s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.044s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>)

>>>>>> executed step in 1.054s

>>>>>> STEP in 0.353s

>>>>>> tryassert in 0.045s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.492s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.048s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>)

>>>>>> executed step in 0.816s

>>>>>> STEP in 0.345s

>>>>>> SUBST in 0.248s

>>> executed a whole step in 1.457s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.049s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>)

>>>>>> executed step in 0.457s

>>>>>> STEP in 0.242s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.738s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.053s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>)

>>>>>> executed step in 0.183s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.458s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.055s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>)

>>>>>> executed step in 0.721s

>>>>>> STEP in 0.346s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.166s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.073s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>)

>>>>>> executed step in 0.803s

>>>>>> STEP in 0.343s

>>>>>> SUBST in 0.592s

>>> executed a whole step in 1.779s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.065s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>)

>>>>>> executed step in 0.756s

>>>>>> STEP in 0.326s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.132s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.071s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>)

>>>>>> executed step in 0.174s

>>>>>> STEP in 0.240s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.449s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.070s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>)

>>>>>> executed step in 0.730s

>>>>>> STEP in 0.349s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.172s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.087s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>)

>>>>>> executed step in 0.780s

>>>>>> STEP in 0.357s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.173s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.083s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>)

>>>>>> executed step in 0.467s

>>>>>> STEP in 0.241s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.744s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.087s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>)

>>>>>> executed step in 0.482s
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 750.752 sec.                                     ==
===================================================================

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.758s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.094s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>)

>>>>>> executed step in 0.474s

>>>>>> STEP in 0.239s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.749s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.097s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>)

>>>>>> executed step in 0.467s

>>>>>> STEP in 0.244s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.749s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.104s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>)

>>>>>> executed step in 0.463s

>>>>>> STEP in 0.247s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.754s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.114s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>)

>>>>>> executed step in 0.217s

>>>>>> STEP in 0.530s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.783s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.202s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>)

>>>>>> executed step in 0.752s

>>>>>> STEP in 0.642s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.489s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.159s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>)

>>>>>> executed step in 0.771s

>>>>>> STEP in 0.357s

>>>>>> tryassert in 0.043s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.232s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.131s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>)

>>>>>> executed step in 1.147s

>>>>>> STEP in 0.392s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.645s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.142s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>)

>>>>>> executed step in 0.786s

>>>>>> STEP in 0.360s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.185s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.149s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>)

>>>>>> executed step in 0.532s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.816s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.156s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>)

>>>>>> executed step in 0.202s

>>>>>> STEP in 0.251s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.490s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.163s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>)

>>>>>> executed step in 0.756s

>>>>>> STEP in 0.366s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.218s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.175s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>)

>>>>>> executed step in 0.773s

>>>>>> STEP in 0.368s

>>>>>> tryassert in 0.044s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.228s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.187s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>)

>>>>>> executed step in 0.531s

>>>>>> STEP in 0.269s

>>>>>> SUBST in 0.288s

>>> executed a whole step in 1.126s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.197s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>)

>>>>>> executed step in 0.473s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.766s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.197s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>)

>>>>>> executed step in 0.188s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.474s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.210s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>)

>>>>>> executed step in 0.777s

>>>>>> STEP in 0.371s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.244s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.223s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>)

>>>>>> executed step in 0.490s

>>>>>> STEP in 0.256s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.786s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.233s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>)

>>>>>> executed step in 0.833s

>>>>>> STEP in 0.257s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.127s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.241s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>)

>>>>>> executed step in 0.801s

>>>>>> STEP in 0.248s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.090s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.247s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>)

>>>>>> executed step in 0.773s

>>>>>> STEP in 0.328s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 1.155s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.267s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>)

>>>>>> executed step in 0.206s

>>>>>> STEP in 0.538s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.781s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.372s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>)

>>>>>> executed step in 0.776s

>>>>>> STEP in 0.374s

>>>>>> tryassert in 0.055s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.246s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.283s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>)

>>>>>> executed step in 0.493s

>>>>>> STEP in 0.258s

>>>>>> SUBST in 0.057s

>>> executed a whole step in 0.844s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.297s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>)

>>>>>> executed step in 0.488s

>>>>>> STEP in 0.257s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.786s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.313s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>)

>>>>>> executed step in 0.190s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.484s
finished to proof free symbols altogether
composed
===================================================================
== Test running: src/tools/symbexec/examples/motor-func-test.exe ==
== Time so far: 780.772 sec.                                     ==
===================================================================

>>> sequentially composed a step in 0.324s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>)

>>>>>> executed step in 1.137s

>>>>>> STEP in 0.380s

>>>>>> tryassert in 0.054s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 1.613s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.335s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>)

>>>>>> executed step in 0.754s

>>>>>> STEP in 0.327s

>>>>>> SUBST in 0.060s

>>> executed a whole step in 1.199s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.346s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>)

>>>>>> executed step in 0.472s

>>>>>> STEP in 0.252s

>>>>>> SUBST in 0.003s

>>> executed a whole step in 0.766s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.357s

sequential composition with singleton mid_state set
Executing one more step @(<|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>)

>>>>>> executed step in 0.178s

>>>>>> STEP in 0.253s

>>>>>> SUBST in 0.000s

>>> executed a whole step in 0.470s
finished to proof free symbols altogether
composed

>>> sequentially composed a step in 0.372s

no executable states left, terminating here
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
.
.
.
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
.
.
.
.
.
.
.
.
.
.
.
.
starting to proof free symbols
finished to proof free symbols operation
finished to proof free symbols altogether
composed
symb_hl_step_in_L_sound (bir_symb_rec_sbir bprog)
  (birs_symb_to_symbst
     <|bsst_pc := <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 0|>;
       bsst_environ := bir_senv_GEN_list birenvtyl;
       bsst_status := BST_Running;
       bsst_pcond :=
         BExp_BinExp BIExp_And
           (BExp_BinExp BIExp_And
              (BExp_BinPred BIExp_LessOrEqual (BExp_Const (Imm32 0xFFFFFFw))
                 (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32))))
              (BExp_Aligned Bit32 2
                 (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))))
           (BExp_BinPred BIExp_LessOrEqual
              (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
              (BExp_Const (Imm64 0xFFFFFFFFFFFFFF00w)))|>,
   {<|bpc_label := BL_Address (Imm32 2824w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2824w); bpc_index := 7|>;
    <|bpc_label := BL_Address (Imm32 2826w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2826w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2826w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2826w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2828w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2828w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2828w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2828w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2830w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2832w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2832w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2832w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2832w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2832w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2834w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2836w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2836w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2836w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2836w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2838w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2840w); bpc_index := 7|>;
    <|bpc_label := BL_Address (Imm32 2842w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2842w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2842w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2842w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2842w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2844w); bpc_index := 7|>;
    <|bpc_label := BL_Address (Imm32 2846w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2846w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2846w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2846w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2848w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2850w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2850w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2850w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2852w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2852w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2852w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2852w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2852w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2854w); bpc_index := 7|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2856w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2858w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2858w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2858w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2858w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2858w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2860w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2860w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2860w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2860w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2862w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2864w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2864w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2864w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2866w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2866w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2866w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2866w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2868w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2870w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2870w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2870w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2870w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2870w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2872w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2872w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2872w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2872w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 6|>;
    <|bpc_label := BL_Address (Imm32 2874w); bpc_index := 7|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2876w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2878w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2878w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2878w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2878w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2878w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 4|>;
    <|bpc_label := BL_Address (Imm32 2880w); bpc_index := 5|>;
    <|bpc_label := BL_Address (Imm32 2882w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2882w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2882w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2882w); bpc_index := 3|>;
    <|bpc_label := BL_Address (Imm32 2884w); bpc_index := 0|>;
    <|bpc_label := BL_Address (Imm32 2884w); bpc_index := 1|>;
    <|bpc_label := BL_Address (Imm32 2884w); bpc_index := 2|>;
    <|bpc_label := BL_Address (Imm32 2884w); bpc_index := 3|>},
   IMAGE birs_symb_to_symbst
     {<|bsst_pc := <|bpc_label := BL_Address (Imm32 2886w); bpc_index := 0|>;
        bsst_environ :=
          birs_gen_env
            [("countw",
              BExp_BinExp BIExp_Plus
                (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                (BExp_Const (Imm64 47w)));
             ("SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R0",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("PSR_Z",
              BExp_BinPred BIExp_Equal
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_Const (Imm32 0w)));
             ("PSR_N",
              BExp_BinPred BIExp_SignedLessThan
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_Const (Imm32 0w)));
             ("R3",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("MEM",
              BExp_Store
                (BExp_Store
                   (BExp_Store
                      (BExp_Store
                         (BExp_Store
                            (BExp_Store
                               (BExp_Store
                                  (BExp_Den
                                     (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                                  (BExp_BinExp BIExp_Minus
                                     (BExp_Den
                                        (BVar "sy_SP_process"
                                           (BType_Imm Bit32)))
                                     (BExp_Const (Imm32 8w)))
                                  BEnd_LittleEndian
                                  (BExp_Den (BVar "sy_R7" (BType_Imm Bit32))))
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                               (BExp_Den (BVar "sy_LR" (BType_Imm Bit32))))
                            (BExp_BinExp BIExp_Plus
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 24w)))
                               (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                            (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                         (BExp_BinExp BIExp_Plus (BExp_Const (Imm32 15w))
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 24w)))) BEnd_LittleEndian
                         (BExp_Cast BIExp_LowCast
                            (BExp_Cast BIExp_UnsignedCast
                               (BExp_Cast BIExp_LowCast
                                  (BExp_BinExp BIExp_RightShift
                                     (BExp_Den
                                        (BVar "sy_R0" (BType_Imm Bit32)))
                                     (BExp_Const (Imm32 31w))) Bit8) Bit32)
                            Bit8))
                      (BExp_BinExp BIExp_Plus
                         (BExp_BinExp BIExp_Minus
                            (BExp_Den
                               (BVar "sy_SP_process" (BType_Imm Bit32)))
                            (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                      BEnd_LittleEndian
                      (BExp_UnaryExp BIExp_ChangeSign
                         (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                   (BExp_BinExp BIExp_Plus
                      (BExp_BinExp BIExp_Minus
                         (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                         (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                   BEnd_LittleEndian
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_BinExp BIExp_Plus
                   (BExp_BinExp BIExp_Minus
                      (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                      (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                BEnd_LittleEndian
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_V",
              BExp_BinPred BIExp_Equal
                (BExp_BinPred BIExp_SignedLessThan
                   (BExp_BinExp BIExp_Minus
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                   (BExp_Const (Imm32 0w)))
                (BExp_BinPred BIExp_SignedLessOrEqual
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_C",
              BExp_BinPred BIExp_LessOrEqual
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("R2",
              BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32);
             ("R1",BExp_Const (Imm32 15w));
             ("R7",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 24w)));
             ("tmp_SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R4",BExp_Den (BVar "sy_R4" (BType_Imm Bit32)));
             ("R5",BExp_Den (BVar "sy_R5" (BType_Imm Bit32)));
             ("R6",BExp_Den (BVar "sy_R6" (BType_Imm Bit32)));
             ("R8",BExp_Den (BVar "sy_R8" (BType_Imm Bit32)));
             ("R9",BExp_Den (BVar "sy_R9" (BType_Imm Bit32)));
             ("R10",BExp_Den (BVar "sy_R10" (BType_Imm Bit32)));
             ("R11",BExp_Den (BVar "sy_R11" (BType_Imm Bit32)));
             ("R12",BExp_Den (BVar "sy_R12" (BType_Imm Bit32)));
             ("LR",BExp_Den (BVar "sy_LR" (BType_Imm Bit32)));
             ("SP_main",BExp_Den (BVar "sy_SP_main" (BType_Imm Bit32)));
             ("ModeHandler",BExp_Den (BVar "sy_ModeHandler" (BType_Imm Bit1)));
             ("tmp_PC",BExp_Den (BVar "sy_tmp_PC" (BType_Imm Bit32)));
             ("tmp_COND",BExp_Den (BVar "sy_tmp_COND" (BType_Imm Bit1)));
             ("tmp_MEM",BExp_Den (BVar "sy_tmp_MEM" (BType_Mem Bit32 Bit8)));
             ("tmp_PSR_C",BExp_Den (BVar "sy_tmp_PSR_C" (BType_Imm Bit1)));
             ("tmp_PSR_N",BExp_Den (BVar "sy_tmp_PSR_N" (BType_Imm Bit1)));
             ("tmp_PSR_V",BExp_Den (BVar "sy_tmp_PSR_V" (BType_Imm Bit1)));
             ("tmp_PSR_Z",BExp_Den (BVar "sy_tmp_PSR_Z" (BType_Imm Bit1)));
             ("tmp_R0",BExp_Den (BVar "sy_tmp_R0" (BType_Imm Bit32)));
             ("tmp_R1",BExp_Den (BVar "sy_tmp_R1" (BType_Imm Bit32)));
             ("tmp_R2",BExp_Den (BVar "sy_tmp_R2" (BType_Imm Bit32)));
             ("tmp_R3",BExp_Den (BVar "sy_tmp_R3" (BType_Imm Bit32)));
             ("tmp_R4",BExp_Den (BVar "sy_tmp_R4" (BType_Imm Bit32)));
             ("tmp_R5",BExp_Den (BVar "sy_tmp_R5" (BType_Imm Bit32)));
             ("tmp_R6",BExp_Den (BVar "sy_tmp_R6" (BType_Imm Bit32)));
             ("tmp_R7",BExp_Den (BVar "sy_tmp_R7" (BType_Imm Bit32)));
             ("tmp_R8",BExp_Den (BVar "sy_tmp_R8" (BType_Imm Bit32)));
             ("tmp_R9",BExp_Den (BVar "sy_tmp_R9" (BType_Imm Bit32)));
             ("tmp_R10",BExp_Den (BVar "sy_tmp_R10" (BType_Imm Bit32)));
             ("tmp_R11",BExp_Den (BVar "sy_tmp_R11" (BType_Imm Bit32)));
             ("tmp_R12",BExp_Den (BVar "sy_tmp_R12" (BType_Imm Bit32)));
             ("tmp_LR",BExp_Den (BVar "sy_tmp_LR" (BType_Imm Bit32)));
             ("tmp_SP_main",
              BExp_Den (BVar "sy_tmp_SP_main" (BType_Imm Bit32)));
             ("tmp_ModeHandler",
              BExp_Den (BVar "sy_tmp_ModeHandler" (BType_Imm Bit1)));
             ("tmp_countw",BExp_Den (BVar "sy_tmp_countw" (BType_Imm Bit64)))];
        bsst_status := BST_Running;
        bsst_pcond :=
          BExp_BinExp BIExp_And
            (BExp_BinExp BIExp_And
               (BExp_BinExp BIExp_And
                  (BExp_BinExp BIExp_And
                     (BExp_BinPred BIExp_LessOrEqual
                        (BExp_Const (Imm32 0xFFFFFFw))
                        (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32))))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinExp BIExp_And
                           (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 3w))) (BExp_Const (Imm32 0w))))
                  (BExp_BinPred BIExp_LessOrEqual
                     (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                     (BExp_Const (Imm64 0xFFFFFFFFFFFFFF00w))))
               (BExp_UnaryExp BIExp_Not
                  (BExp_BinPred BIExp_Equal
                     (BExp_Cast BIExp_UnsignedCast
                        (BExp_Cast BIExp_LowCast
                           (BExp_BinExp BIExp_RightShift
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                              (BExp_Const (Imm32 31w))) Bit8) Bit32)
                     (BExp_Const (Imm32 0w)))))
            (BExp_UnaryExp BIExp_Not
               (BExp_BinPred BIExp_LessOrEqual
                  (BExp_BinPred BIExp_Equal
                     (BExp_BinPred BIExp_SignedLessThan
                        (BExp_BinExp BIExp_Minus
                           (BExp_UnaryExp BIExp_ChangeSign
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)) (BExp_Const (Imm32 0w)))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinPred BIExp_SignedLessThan
                           (BExp_BinExp BIExp_Minus
                              (BExp_UnaryExp BIExp_ChangeSign
                                 (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                              (BExp_Load
                                 (BExp_Den
                                    (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                                 (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                                 Bit32)) (BExp_Const (Imm32 0w)))
                        (BExp_BinPred BIExp_SignedLessOrEqual
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)
                           (BExp_UnaryExp BIExp_ChangeSign
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))))
                  (BExp_BinPred BIExp_Equal
                     (BExp_UnaryExp BIExp_ChangeSign
                        (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                     (BExp_Load
                        (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                        (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))))|>;
      <|bsst_pc := <|bpc_label := BL_Address (Imm32 2886w); bpc_index := 0|>;
        bsst_environ :=
          birs_gen_env
            [("countw",
              BExp_BinExp BIExp_Plus
                (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                (BExp_Const (Imm64 47w)));
             ("SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R0",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_UnaryExp BIExp_ChangeSign
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))));
             ("PSR_Z",
              BExp_BinPred BIExp_Equal
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_UnaryExp BIExp_ChangeSign
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                (BExp_Const (Imm32 0w)));
             ("PSR_N",
              BExp_BinPred BIExp_SignedLessThan
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_UnaryExp BIExp_ChangeSign
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                (BExp_Const (Imm32 0w)));
             ("R3",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_UnaryExp BIExp_ChangeSign
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))));
             ("MEM",
              BExp_Store
                (BExp_Store
                   (BExp_Store
                      (BExp_Store
                         (BExp_Store
                            (BExp_Store
                               (BExp_Store
                                  (BExp_Den
                                     (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                                  (BExp_BinExp BIExp_Minus
                                     (BExp_Den
                                        (BVar "sy_SP_process"
                                           (BType_Imm Bit32)))
                                     (BExp_Const (Imm32 8w)))
                                  BEnd_LittleEndian
                                  (BExp_Den (BVar "sy_R7" (BType_Imm Bit32))))
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                               (BExp_Den (BVar "sy_LR" (BType_Imm Bit32))))
                            (BExp_BinExp BIExp_Plus
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 24w)))
                               (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                            (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                         (BExp_BinExp BIExp_Plus (BExp_Const (Imm32 15w))
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 24w)))) BEnd_LittleEndian
                         (BExp_Cast BIExp_LowCast
                            (BExp_Cast BIExp_UnsignedCast
                               (BExp_Cast BIExp_LowCast
                                  (BExp_BinExp BIExp_RightShift
                                     (BExp_Den
                                        (BVar "sy_R0" (BType_Imm Bit32)))
                                     (BExp_Const (Imm32 31w))) Bit8) Bit32)
                            Bit8))
                      (BExp_BinExp BIExp_Plus
                         (BExp_BinExp BIExp_Minus
                            (BExp_Den
                               (BVar "sy_SP_process" (BType_Imm Bit32)))
                            (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                      BEnd_LittleEndian
                      (BExp_UnaryExp BIExp_ChangeSign
                         (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                   (BExp_BinExp BIExp_Plus
                      (BExp_BinExp BIExp_Minus
                         (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                         (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                   BEnd_LittleEndian
                   (BExp_UnaryExp BIExp_ChangeSign
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                (BExp_BinExp BIExp_Plus
                   (BExp_BinExp BIExp_Minus
                      (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                      (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                BEnd_LittleEndian
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_UnaryExp BIExp_ChangeSign
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))));
             ("PSR_V",
              BExp_BinPred BIExp_Equal
                (BExp_BinPred BIExp_SignedLessThan
                   (BExp_BinExp BIExp_Minus
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                      (BExp_UnaryExp BIExp_ChangeSign
                         (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))
                   (BExp_Const (Imm32 0w)))
                (BExp_BinPred BIExp_SignedLessOrEqual
                   (BExp_UnaryExp BIExp_ChangeSign
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_C",
              BExp_BinPred BIExp_LessOrEqual
                (BExp_UnaryExp BIExp_ChangeSign
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("R2",
              BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32);
             ("R1",BExp_Const (Imm32 15w));
             ("R7",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 24w)));
             ("tmp_SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R4",BExp_Den (BVar "sy_R4" (BType_Imm Bit32)));
             ("R5",BExp_Den (BVar "sy_R5" (BType_Imm Bit32)));
             ("R6",BExp_Den (BVar "sy_R6" (BType_Imm Bit32)));
             ("R8",BExp_Den (BVar "sy_R8" (BType_Imm Bit32)));
             ("R9",BExp_Den (BVar "sy_R9" (BType_Imm Bit32)));
             ("R10",BExp_Den (BVar "sy_R10" (BType_Imm Bit32)));
             ("R11",BExp_Den (BVar "sy_R11" (BType_Imm Bit32)));
             ("R12",BExp_Den (BVar "sy_R12" (BType_Imm Bit32)));
             ("LR",BExp_Den (BVar "sy_LR" (BType_Imm Bit32)));
             ("SP_main",BExp_Den (BVar "sy_SP_main" (BType_Imm Bit32)));
             ("ModeHandler",BExp_Den (BVar "sy_ModeHandler" (BType_Imm Bit1)));
             ("tmp_PC",BExp_Den (BVar "sy_tmp_PC" (BType_Imm Bit32)));
             ("tmp_COND",BExp_Den (BVar "sy_tmp_COND" (BType_Imm Bit1)));
             ("tmp_MEM",BExp_Den (BVar "sy_tmp_MEM" (BType_Mem Bit32 Bit8)));
             ("tmp_PSR_C",BExp_Den (BVar "sy_tmp_PSR_C" (BType_Imm Bit1)));
             ("tmp_PSR_N",BExp_Den (BVar "sy_tmp_PSR_N" (BType_Imm Bit1)));
             ("tmp_PSR_V",BExp_Den (BVar "sy_tmp_PSR_V" (BType_Imm Bit1)));
             ("tmp_PSR_Z",BExp_Den (BVar "sy_tmp_PSR_Z" (BType_Imm Bit1)));
             ("tmp_R0",BExp_Den (BVar "sy_tmp_R0" (BType_Imm Bit32)));
             ("tmp_R1",BExp_Den (BVar "sy_tmp_R1" (BType_Imm Bit32)));
             ("tmp_R2",BExp_Den (BVar "sy_tmp_R2" (BType_Imm Bit32)));
             ("tmp_R3",BExp_Den (BVar "sy_tmp_R3" (BType_Imm Bit32)));
             ("tmp_R4",BExp_Den (BVar "sy_tmp_R4" (BType_Imm Bit32)));
             ("tmp_R5",BExp_Den (BVar "sy_tmp_R5" (BType_Imm Bit32)));
             ("tmp_R6",BExp_Den (BVar "sy_tmp_R6" (BType_Imm Bit32)));
             ("tmp_R7",BExp_Den (BVar "sy_tmp_R7" (BType_Imm Bit32)));
             ("tmp_R8",BExp_Den (BVar "sy_tmp_R8" (BType_Imm Bit32)));
             ("tmp_R9",BExp_Den (BVar "sy_tmp_R9" (BType_Imm Bit32)));
             ("tmp_R10",BExp_Den (BVar "sy_tmp_R10" (BType_Imm Bit32)));
             ("tmp_R11",BExp_Den (BVar "sy_tmp_R11" (BType_Imm Bit32)));
             ("tmp_R12",BExp_Den (BVar "sy_tmp_R12" (BType_Imm Bit32)));
             ("tmp_LR",BExp_Den (BVar "sy_tmp_LR" (BType_Imm Bit32)));
             ("tmp_SP_main",
              BExp_Den (BVar "sy_tmp_SP_main" (BType_Imm Bit32)));
             ("tmp_ModeHandler",
              BExp_Den (BVar "sy_tmp_ModeHandler" (BType_Imm Bit1)));
             ("tmp_countw",BExp_Den (BVar "sy_tmp_countw" (BType_Imm Bit64)))];
        bsst_status := BST_Running;
        bsst_pcond :=
          BExp_BinExp BIExp_And
            (BExp_BinExp BIExp_And
               (BExp_BinExp BIExp_And
                  (BExp_BinExp BIExp_And
                     (BExp_BinPred BIExp_LessOrEqual
                        (BExp_Const (Imm32 0xFFFFFFw))
                        (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32))))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinExp BIExp_And
                           (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 3w))) (BExp_Const (Imm32 0w))))
                  (BExp_BinPred BIExp_LessOrEqual
                     (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                     (BExp_Const (Imm64 0xFFFFFFFFFFFFFF00w))))
               (BExp_UnaryExp BIExp_Not
                  (BExp_BinPred BIExp_Equal
                     (BExp_Cast BIExp_UnsignedCast
                        (BExp_Cast BIExp_LowCast
                           (BExp_BinExp BIExp_RightShift
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                              (BExp_Const (Imm32 31w))) Bit8) Bit32)
                     (BExp_Const (Imm32 0w)))))
            (BExp_BinPred BIExp_LessOrEqual
               (BExp_BinPred BIExp_Equal
                  (BExp_BinPred BIExp_SignedLessThan
                     (BExp_BinExp BIExp_Minus
                        (BExp_UnaryExp BIExp_ChangeSign
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                        (BExp_Load
                           (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                           (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                     (BExp_Const (Imm32 0w)))
                  (BExp_BinPred BIExp_Equal
                     (BExp_BinPred BIExp_SignedLessThan
                        (BExp_BinExp BIExp_Minus
                           (BExp_UnaryExp BIExp_ChangeSign
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)) (BExp_Const (Imm32 0w)))
                     (BExp_BinPred BIExp_SignedLessOrEqual
                        (BExp_Load
                           (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                           (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                        (BExp_UnaryExp BIExp_ChangeSign
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))))))
               (BExp_BinPred BIExp_Equal
                  (BExp_UnaryExp BIExp_ChangeSign
                     (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                  (BExp_Load
                     (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                     (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)))|>;
      <|bsst_pc := <|bpc_label := BL_Address (Imm32 2886w); bpc_index := 0|>;
        bsst_environ :=
          birs_gen_env
            [("countw",
              BExp_BinExp BIExp_Plus
                (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                (BExp_Const (Imm64 44w)));
             ("SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R0",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("PSR_Z",
              BExp_BinPred BIExp_Equal
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_Const (Imm32 0w)));
             ("PSR_N",
              BExp_BinPred BIExp_SignedLessThan
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_Const (Imm32 0w)));
             ("R3",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("MEM",
              BExp_Store
                (BExp_Store
                   (BExp_Store
                      (BExp_Store
                         (BExp_Store
                            (BExp_Store
                               (BExp_Den
                                  (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 8w))) BEnd_LittleEndian
                               (BExp_Den (BVar "sy_R7" (BType_Imm Bit32))))
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                            (BExp_Den (BVar "sy_LR" (BType_Imm Bit32))))
                         (BExp_BinExp BIExp_Plus
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 24w)))
                            (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                         (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                      (BExp_BinExp BIExp_Plus (BExp_Const (Imm32 15w))
                         (BExp_BinExp BIExp_Minus
                            (BExp_Den
                               (BVar "sy_SP_process" (BType_Imm Bit32)))
                            (BExp_Const (Imm32 24w)))) BEnd_LittleEndian
                      (BExp_Cast BIExp_LowCast
                         (BExp_Cast BIExp_UnsignedCast
                            (BExp_Cast BIExp_LowCast
                               (BExp_BinExp BIExp_RightShift
                                  (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 31w))) Bit8) Bit32) Bit8))
                   (BExp_BinExp BIExp_Plus
                      (BExp_BinExp BIExp_Minus
                         (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                         (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                   BEnd_LittleEndian
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                (BExp_BinExp BIExp_Plus
                   (BExp_BinExp BIExp_Minus
                      (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                      (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                BEnd_LittleEndian
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_V",
              BExp_BinPred BIExp_Equal
                (BExp_BinPred BIExp_SignedLessThan
                   (BExp_BinExp BIExp_Minus
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                   (BExp_Const (Imm32 0w)))
                (BExp_BinPred BIExp_SignedLessOrEqual
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_C",
              BExp_BinPred BIExp_LessOrEqual
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("R2",
              BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32);
             ("R1",BExp_Const (Imm32 15w));
             ("R7",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 24w)));
             ("tmp_SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R4",BExp_Den (BVar "sy_R4" (BType_Imm Bit32)));
             ("R5",BExp_Den (BVar "sy_R5" (BType_Imm Bit32)));
             ("R6",BExp_Den (BVar "sy_R6" (BType_Imm Bit32)));
             ("R8",BExp_Den (BVar "sy_R8" (BType_Imm Bit32)));
             ("R9",BExp_Den (BVar "sy_R9" (BType_Imm Bit32)));
             ("R10",BExp_Den (BVar "sy_R10" (BType_Imm Bit32)));
             ("R11",BExp_Den (BVar "sy_R11" (BType_Imm Bit32)));
             ("R12",BExp_Den (BVar "sy_R12" (BType_Imm Bit32)));
             ("LR",BExp_Den (BVar "sy_LR" (BType_Imm Bit32)));
             ("SP_main",BExp_Den (BVar "sy_SP_main" (BType_Imm Bit32)));
             ("ModeHandler",BExp_Den (BVar "sy_ModeHandler" (BType_Imm Bit1)));
             ("tmp_PC",BExp_Den (BVar "sy_tmp_PC" (BType_Imm Bit32)));
             ("tmp_COND",BExp_Den (BVar "sy_tmp_COND" (BType_Imm Bit1)));
             ("tmp_MEM",BExp_Den (BVar "sy_tmp_MEM" (BType_Mem Bit32 Bit8)));
             ("tmp_PSR_C",BExp_Den (BVar "sy_tmp_PSR_C" (BType_Imm Bit1)));
             ("tmp_PSR_N",BExp_Den (BVar "sy_tmp_PSR_N" (BType_Imm Bit1)));
             ("tmp_PSR_V",BExp_Den (BVar "sy_tmp_PSR_V" (BType_Imm Bit1)));
             ("tmp_PSR_Z",BExp_Den (BVar "sy_tmp_PSR_Z" (BType_Imm Bit1)));
             ("tmp_R0",BExp_Den (BVar "sy_tmp_R0" (BType_Imm Bit32)));
             ("tmp_R1",BExp_Den (BVar "sy_tmp_R1" (BType_Imm Bit32)));
             ("tmp_R2",BExp_Den (BVar "sy_tmp_R2" (BType_Imm Bit32)));
             ("tmp_R3",BExp_Den (BVar "sy_tmp_R3" (BType_Imm Bit32)));
             ("tmp_R4",BExp_Den (BVar "sy_tmp_R4" (BType_Imm Bit32)));
             ("tmp_R5",BExp_Den (BVar "sy_tmp_R5" (BType_Imm Bit32)));
             ("tmp_R6",BExp_Den (BVar "sy_tmp_R6" (BType_Imm Bit32)));
             ("tmp_R7",BExp_Den (BVar "sy_tmp_R7" (BType_Imm Bit32)));
             ("tmp_R8",BExp_Den (BVar "sy_tmp_R8" (BType_Imm Bit32)));
             ("tmp_R9",BExp_Den (BVar "sy_tmp_R9" (BType_Imm Bit32)));
             ("tmp_R10",BExp_Den (BVar "sy_tmp_R10" (BType_Imm Bit32)));
             ("tmp_R11",BExp_Den (BVar "sy_tmp_R11" (BType_Imm Bit32)));
             ("tmp_R12",BExp_Den (BVar "sy_tmp_R12" (BType_Imm Bit32)));
             ("tmp_LR",BExp_Den (BVar "sy_tmp_LR" (BType_Imm Bit32)));
             ("tmp_SP_main",
              BExp_Den (BVar "sy_tmp_SP_main" (BType_Imm Bit32)));
             ("tmp_ModeHandler",
              BExp_Den (BVar "sy_tmp_ModeHandler" (BType_Imm Bit1)));
             ("tmp_countw",BExp_Den (BVar "sy_tmp_countw" (BType_Imm Bit64)))];
        bsst_status := BST_Running;
        bsst_pcond :=
          BExp_BinExp BIExp_And
            (BExp_BinExp BIExp_And
               (BExp_BinExp BIExp_And
                  (BExp_BinExp BIExp_And
                     (BExp_BinPred BIExp_LessOrEqual
                        (BExp_Const (Imm32 0xFFFFFFw))
                        (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32))))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinExp BIExp_And
                           (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 3w))) (BExp_Const (Imm32 0w))))
                  (BExp_BinPred BIExp_LessOrEqual
                     (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                     (BExp_Const (Imm64 0xFFFFFFFFFFFFFF00w))))
               (BExp_BinPred BIExp_Equal
                  (BExp_Cast BIExp_UnsignedCast
                     (BExp_Cast BIExp_LowCast
                        (BExp_BinExp BIExp_RightShift
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 31w))) Bit8) Bit32)
                  (BExp_Const (Imm32 0w))))
            (BExp_UnaryExp BIExp_Not
               (BExp_BinPred BIExp_LessOrEqual
                  (BExp_BinPred BIExp_Equal
                     (BExp_BinPred BIExp_SignedLessThan
                        (BExp_BinExp BIExp_Minus
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)) (BExp_Const (Imm32 0w)))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinPred BIExp_SignedLessThan
                           (BExp_BinExp BIExp_Minus
                              (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                              (BExp_Load
                                 (BExp_Den
                                    (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                                 (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                                 Bit32)) (BExp_Const (Imm32 0w)))
                        (BExp_BinPred BIExp_SignedLessOrEqual
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))))
                  (BExp_BinPred BIExp_Equal
                     (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                     (BExp_Load
                        (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                        (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))))|>;
      <|bsst_pc := <|bpc_label := BL_Address (Imm32 2886w); bpc_index := 0|>;
        bsst_environ :=
          birs_gen_env
            [("countw",
              BExp_BinExp BIExp_Plus
                (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                (BExp_Const (Imm64 44w)));
             ("SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R0",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))));
             ("PSR_Z",
              BExp_BinPred BIExp_Equal
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                (BExp_Const (Imm32 0w)));
             ("PSR_N",
              BExp_BinPred BIExp_SignedLessThan
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                (BExp_Const (Imm32 0w)));
             ("R3",
              BExp_BinExp BIExp_Minus
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))));
             ("MEM",
              BExp_Store
                (BExp_Store
                   (BExp_Store
                      (BExp_Store
                         (BExp_Store
                            (BExp_Store
                               (BExp_Den
                                  (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                               (BExp_BinExp BIExp_Minus
                                  (BExp_Den
                                     (BVar "sy_SP_process" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 8w))) BEnd_LittleEndian
                               (BExp_Den (BVar "sy_R7" (BType_Imm Bit32))))
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                            (BExp_Den (BVar "sy_LR" (BType_Imm Bit32))))
                         (BExp_BinExp BIExp_Plus
                            (BExp_BinExp BIExp_Minus
                               (BExp_Den
                                  (BVar "sy_SP_process" (BType_Imm Bit32)))
                               (BExp_Const (Imm32 24w)))
                            (BExp_Const (Imm32 4w))) BEnd_LittleEndian
                         (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                      (BExp_BinExp BIExp_Plus (BExp_Const (Imm32 15w))
                         (BExp_BinExp BIExp_Minus
                            (BExp_Den
                               (BVar "sy_SP_process" (BType_Imm Bit32)))
                            (BExp_Const (Imm32 24w)))) BEnd_LittleEndian
                      (BExp_Cast BIExp_LowCast
                         (BExp_Cast BIExp_UnsignedCast
                            (BExp_Cast BIExp_LowCast
                               (BExp_BinExp BIExp_RightShift
                                  (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                                  (BExp_Const (Imm32 31w))) Bit8) Bit32) Bit8))
                   (BExp_BinExp BIExp_Plus
                      (BExp_BinExp BIExp_Minus
                         (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                         (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                   BEnd_LittleEndian
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                (BExp_BinExp BIExp_Plus
                   (BExp_BinExp BIExp_Minus
                      (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                      (BExp_Const (Imm32 24w))) (BExp_Const (Imm32 4w)))
                BEnd_LittleEndian
                (BExp_BinExp BIExp_Minus
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))));
             ("PSR_V",
              BExp_BinPred BIExp_Equal
                (BExp_BinPred BIExp_SignedLessThan
                   (BExp_BinExp BIExp_Minus
                      (BExp_Load
                         (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                         (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                      (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))
                   (BExp_Const (Imm32 0w)))
                (BExp_BinPred BIExp_SignedLessOrEqual
                   (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                   (BExp_Load
                      (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                      (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)));
             ("PSR_C",
              BExp_BinPred BIExp_LessOrEqual
                (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                (BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                   (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32));
             ("R2",
              BExp_Load (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32);
             ("R1",BExp_Const (Imm32 15w));
             ("R7",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 24w)));
             ("tmp_SP_process",
              BExp_BinExp BIExp_Minus
                (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                (BExp_Const (Imm32 8w)));
             ("R4",BExp_Den (BVar "sy_R4" (BType_Imm Bit32)));
             ("R5",BExp_Den (BVar "sy_R5" (BType_Imm Bit32)));
             ("R6",BExp_Den (BVar "sy_R6" (BType_Imm Bit32)));
             ("R8",BExp_Den (BVar "sy_R8" (BType_Imm Bit32)));
             ("R9",BExp_Den (BVar "sy_R9" (BType_Imm Bit32)));
             ("R10",BExp_Den (BVar "sy_R10" (BType_Imm Bit32)));
             ("R11",BExp_Den (BVar "sy_R11" (BType_Imm Bit32)));
             ("R12",BExp_Den (BVar "sy_R12" (BType_Imm Bit32)));
             ("LR",BExp_Den (BVar "sy_LR" (BType_Imm Bit32)));
             ("SP_main",BExp_Den (BVar "sy_SP_main" (BType_Imm Bit32)));
             ("ModeHandler",BExp_Den (BVar "sy_ModeHandler" (BType_Imm Bit1)));
             ("tmp_PC",BExp_Den (BVar "sy_tmp_PC" (BType_Imm Bit32)));
             ("tmp_COND",BExp_Den (BVar "sy_tmp_COND" (BType_Imm Bit1)));
             ("tmp_MEM",BExp_Den (BVar "sy_tmp_MEM" (BType_Mem Bit32 Bit8)));
             ("tmp_PSR_C",BExp_Den (BVar "sy_tmp_PSR_C" (BType_Imm Bit1)));
             ("tmp_PSR_N",BExp_Den (BVar "sy_tmp_PSR_N" (BType_Imm Bit1)));
             ("tmp_PSR_V",BExp_Den (BVar "sy_tmp_PSR_V" (BType_Imm Bit1)));
             ("tmp_PSR_Z",BExp_Den (BVar "sy_tmp_PSR_Z" (BType_Imm Bit1)));
             ("tmp_R0",BExp_Den (BVar "sy_tmp_R0" (BType_Imm Bit32)));
             ("tmp_R1",BExp_Den (BVar "sy_tmp_R1" (BType_Imm Bit32)));
             ("tmp_R2",BExp_Den (BVar "sy_tmp_R2" (BType_Imm Bit32)));
             ("tmp_R3",BExp_Den (BVar "sy_tmp_R3" (BType_Imm Bit32)));
             ("tmp_R4",BExp_Den (BVar "sy_tmp_R4" (BType_Imm Bit32)));
             ("tmp_R5",BExp_Den (BVar "sy_tmp_R5" (BType_Imm Bit32)));
             ("tmp_R6",BExp_Den (BVar "sy_tmp_R6" (BType_Imm Bit32)));
             ("tmp_R7",BExp_Den (BVar "sy_tmp_R7" (BType_Imm Bit32)));
             ("tmp_R8",BExp_Den (BVar "sy_tmp_R8" (BType_Imm Bit32)));
             ("tmp_R9",BExp_Den (BVar "sy_tmp_R9" (BType_Imm Bit32)));
             ("tmp_R10",BExp_Den (BVar "sy_tmp_R10" (BType_Imm Bit32)));
             ("tmp_R11",BExp_Den (BVar "sy_tmp_R11" (BType_Imm Bit32)));
             ("tmp_R12",BExp_Den (BVar "sy_tmp_R12" (BType_Imm Bit32)));
             ("tmp_LR",BExp_Den (BVar "sy_tmp_LR" (BType_Imm Bit32)));
             ("tmp_SP_main",
              BExp_Den (BVar "sy_tmp_SP_main" (BType_Imm Bit32)));
             ("tmp_ModeHandler",
              BExp_Den (BVar "sy_tmp_ModeHandler" (BType_Imm Bit1)));
             ("tmp_countw",BExp_Den (BVar "sy_tmp_countw" (BType_Imm Bit64)))];
        bsst_status := BST_Running;
        bsst_pcond :=
          BExp_BinExp BIExp_And
            (BExp_BinExp BIExp_And
               (BExp_BinExp BIExp_And
                  (BExp_BinExp BIExp_And
                     (BExp_BinPred BIExp_LessOrEqual
                        (BExp_Const (Imm32 0xFFFFFFw))
                        (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32))))
                     (BExp_BinPred BIExp_Equal
                        (BExp_BinExp BIExp_And
                           (BExp_Den (BVar "sy_SP_process" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 3w))) (BExp_Const (Imm32 0w))))
                  (BExp_BinPred BIExp_LessOrEqual
                     (BExp_Den (BVar "sy_countw" (BType_Imm Bit64)))
                     (BExp_Const (Imm64 0xFFFFFFFFFFFFFF00w))))
               (BExp_BinPred BIExp_Equal
                  (BExp_Cast BIExp_UnsignedCast
                     (BExp_Cast BIExp_LowCast
                        (BExp_BinExp BIExp_RightShift
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                           (BExp_Const (Imm32 31w))) Bit8) Bit32)
                  (BExp_Const (Imm32 0w))))
            (BExp_BinPred BIExp_LessOrEqual
               (BExp_BinPred BIExp_Equal
                  (BExp_BinPred BIExp_SignedLessThan
                     (BExp_BinExp BIExp_Minus
                        (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                        (BExp_Load
                           (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                           (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32))
                     (BExp_Const (Imm32 0w)))
                  (BExp_BinPred BIExp_Equal
                     (BExp_BinPred BIExp_SignedLessThan
                        (BExp_BinExp BIExp_Minus
                           (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                           (BExp_Load
                              (BExp_Den
                                 (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                              (BExp_Const (Imm32 2888w)) BEnd_LittleEndian
                              Bit32)) (BExp_Const (Imm32 0w)))
                     (BExp_BinPred BIExp_SignedLessOrEqual
                        (BExp_Load
                           (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                           (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)
                        (BExp_Den (BVar "sy_R0" (BType_Imm Bit32))))))
               (BExp_BinPred BIExp_Equal
                  (BExp_Den (BVar "sy_R0" (BType_Imm Bit32)))
                  (BExp_Load
                     (BExp_Den (BVar "sy_MEM" (BType_Mem Bit32 Bit8)))
                     (BExp_Const (Imm32 2888w)) BEnd_LittleEndian Bit32)))|>})
======================================================================
== Test successful: src/tools/symbexec/examples/motor-func-test.exe ==
== Elapsed time: 803.457 sec.                                       ==
======================================================================
