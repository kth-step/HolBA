{"arch":"RISCV","name":"WRR+2W+addr+fence.rw.w","info":["\"Rfe DpAddrdR Fre Fence.rw.wdWW Wse\"","Cycle=Rfe DpAddrdR Fre Fence.rw.wdWW Wse","Relax=","Safe=Rfe Fre Wse Fence.rw.wdWW DpAddrdR","Generator=diy7 (version 7.51+4(dev))","Prefetch=1:x=F,1:y=T,2:y=F,2:x=W","Com=Rf Fr Ws","Orig=Rfe DpAddrdR Fre Fence.rw.wdWW Wse"],"inits":["[]","(K NONE)⦇\"x6\" ↦ SOME (BVal_Imm (Imm64 x)); \"x5\" ↦ SOME (BVal_Imm (Imm64 2w))⦈","(K NONE)⦇\"x9\" ↦ SOME (BVal_Imm (Imm64 y)); \"x6\" ↦ SOME (BVal_Imm (Imm64 x)); \"x10\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x8\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x5\" ↦ SOME (BVal_Imm (Imm64 0w))⦈","(K NONE)⦇\"x7\" ↦ SOME (BVal_Imm (Imm64 x)); \"x6\" ↦ SOME (BVal_Imm (Imm64 y)); \"x5\" ↦ SOME (BVal_Imm (Imm64 1w))⦈"],"progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00532023 (sw t0,0(t1))\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"00000013 (nop)\"; bb_atomic := F; bb_statements := []; bb_last_statement := BStmt_Halt (BExp_Const (Imm32 0w))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00032283 (lw t0,0(t1))\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"x5\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0052C3B3 (xor t2,t0,t0)\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"x7\" (BType_Imm Bit64)) (BExp_Const (Imm64 0w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00748533 (add a0,s1,t2)\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"x10\" (BType_Imm Bit64)) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00052403 (lw s0,0(a0))\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"x8\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x10\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00000013 (nop)\"; bb_atomic := F; bb_statements := []; bb_last_statement := BStmt_Halt (BExp_Const (Imm32 0w))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00532023 (sw t0,0(t1))\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0310000F\"; bb_atomic := T; bb_statements := [BStmt_Fence BM_ReadWrite BM_Write]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"0053A023 (sw t0,0(t2))\"; bb_atomic := F; bb_statements := [BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00000013 (nop)\"; bb_atomic := F; bb_statements := []; bb_last_statement := BStmt_Halt (BExp_Const (Imm32 0w))|>]"],"final":"EXISTS (λ(M,TS). M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 2w)) ∧ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 2w)) ∧ EL 1 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)))"}